{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\n// Air Quality Gauge Component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AirQualityGauge = ({\n  label,\n  value,\n  unit,\n  maxValue,\n  colorThresholds\n}) => {\n  const safeValue = value && !isNaN(value) ? value : 0;\n  const percentage = Math.min(safeValue / maxValue * 100, 100);\n  const getColor = value => {\n    if (!value || isNaN(value)) return 'rgb(128, 128, 128)';\n    for (const threshold of colorThresholds) {\n      if (value <= threshold.value) {\n        return threshold.color;\n      }\n    }\n    return colorThresholds[colorThresholds.length - 1].color;\n  };\n  const color = getColor(safeValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col items-center w-full max-w-xs p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative w-full h-48 bg-gray-200 rounded-full overflow-hidden\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute bottom-0 w-full transition-all duration-500 ease-out\",\n        style: {\n          height: `${percentage}%`,\n          backgroundColor: color\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute inset-0 flex items-center justify-center flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl font-bold\",\n          children: value && !isNaN(value) ? value : '-'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: unit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// Air Quality Display Component\n_c = AirQualityGauge;\nconst AirQualityDisplay = ({\n  data\n}) => {\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-4\",\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this);\n  }\n  const parseValue = value => {\n    const parsed = parseFloat(value);\n    return !isNaN(parsed) ? parsed : null;\n  };\n  const gaugeConfigs = {\n    pm10: {\n      label: 'PM10',\n      unit: 'μg/m³',\n      maxValue: 200,\n      colorThresholds: [{\n        value: 15,\n        color: 'rgb(76, 80, 175)'\n      }, {\n        value: 35,\n        color: 'rgb(76, 175, 80)'\n      }, {\n        value: 75,\n        color: 'rgb(255, 245, 89)'\n      }, {\n        value: 150,\n        color: 'rgb(255, 152, 0)'\n      }, {\n        value: Infinity,\n        color: 'rgb(244, 67, 54)'\n      }]\n    },\n    pm25: {\n      label: 'PM2.5',\n      unit: 'μg/m³',\n      maxValue: 100,\n      colorThresholds: [{\n        value: 15,\n        color: 'rgb(76, 80, 175)'\n      }, {\n        value: 25,\n        color: 'rgb(76, 175, 80)'\n      }, {\n        value: 50,\n        color: 'rgb(255, 245, 89)'\n      }, {\n        value: 75,\n        color: 'rgb(255, 152, 0)'\n      }, {\n        value: Infinity,\n        color: 'rgb(244, 67, 54)'\n      }]\n    },\n    co2: {\n      label: 'CO2',\n      unit: 'ppm',\n      maxValue: 1000,\n      colorThresholds: [{\n        value: 400,\n        color: 'rgb(76, 175, 80)'\n      }, {\n        value: 1000,\n        color: 'rgb(255, 245, 89)'\n      }, {\n        value: 2000,\n        color: 'rgb(255, 152, 0)'\n      }, {\n        value: Infinity,\n        color: 'rgb(244, 67, 54)'\n      }]\n    },\n    o3: {\n      label: 'O3',\n      unit: 'ppb',\n      maxValue: 200,\n      colorThresholds: [{\n        value: 30,\n        color: 'rgb(76, 175, 80)'\n      }, {\n        value: 90,\n        color: 'rgb(255, 245, 89)'\n      }, {\n        value: 150,\n        color: 'rgb(255, 152, 0)'\n      }, {\n        value: Infinity,\n        color: 'rgb(244, 67, 54)'\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-row justify-center gap-4 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(AirQualityGauge, {\n      label: gaugeConfigs.pm10.label,\n      value: parseValue(data.pm10Value),\n      unit: gaugeConfigs.pm10.unit,\n      maxValue: gaugeConfigs.pm10.maxValue,\n      colorThresholds: gaugeConfigs.pm10.colorThresholds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AirQualityGauge, {\n      label: gaugeConfigs.pm25.label,\n      value: parseValue(data.pm25Value),\n      unit: gaugeConfigs.pm25.unit,\n      maxValue: gaugeConfigs.pm25.maxValue,\n      colorThresholds: gaugeConfigs.pm25.colorThresholds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AirQualityGauge, {\n      label: gaugeConfigs.co2.label,\n      value: parseValue(data.coValue),\n      unit: gaugeConfigs.co2.unit,\n      maxValue: gaugeConfigs.co2.maxValue,\n      colorThresholds: gaugeConfigs.co2.colorThresholds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AirQualityGauge, {\n      label: gaugeConfigs.o3.label,\n      value: parseValue(data.o3Value),\n      unit: gaugeConfigs.o3.unit,\n      maxValue: gaugeConfigs.o3.maxValue,\n      colorThresholds: gaugeConfigs.o3.colorThresholds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n// Main TodayDust Component\n_c2 = AirQualityDisplay;\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => {\n        const dateA = new Date(a.dataTime);\n        const dateB = new Date(b.dataTime);\n        return dateB - dateA;\n      });\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{\n            region: firstRegion,\n            regionDetail: firstRegionDetail,\n            apiData: detailData\n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n  const getMarkerStyleByPM10 = value => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)'\n    };\n    const pmValue = parseFloat(value);\n    let size = 30;\n    if (pmValue > 15 && pmValue <= 35) size = 35;else if (pmValue > 35 && pmValue <= 75) size = 40;else if (pmValue > 75 && pmValue <= 150) size = 45;else if (pmValue > 150) size = 50;\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px',\n      border: '2px solid #333',\n      fontSize: '14px',\n      fontWeight: 'bold'\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 12\n    }, this);\n  }\n  if (!dustData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 12\n    }, this);\n  }\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC2E4\\uC2DC\\uAC04 \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-data-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"api-data-list\",\n        children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"api-data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [data.region, \" - \", data.regionDetail, \" \\uC9C0\\uC5ED \\uC815\\uBCF4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCE21\\uC815 \\uC2DC\\uAC04: \", item.dataTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(AirQualityDisplay, {\n              data: item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 19\n          }, this))]\n        }, data.region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dust-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [36.5, 128.5],\n        zoom: 7,\n        scrollWheelZoom: false,\n        zoomControl: false,\n        className: \"map-container\",\n        doubleClickZoom: false,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\",\n          maxZoom: 19\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), cities.map(([city, value]) => {\n          const coordinates = cityCoordinates[cityMapping[city]];\n          if (!coordinates) return null;\n          const markerStyle = getMarkerStyleByPM10(value);\n          const icon = L.divIcon({\n            className: 'custom-icon',\n            html: ` \n                <div class=\"marker-box\" \n                     style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; align-items: center; justify-content: center;\">\n                  <span class=\"marker-label\" \n                        style=\"color: rgb(0, 0, 0, 0.9); font-size: ${markerStyle.fontSize}; font-weight: ${markerStyle.fontWeight};\">\n                    ${cityMapping[city] || city}\n                  </span>\n                </div>`,\n            iconSize: [parseInt(markerStyle.width), parseInt(markerStyle.height)]\n          });\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: coordinates,\n            icon: icon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  fontFamily: 'Roboto, sans-serif',\n                  color: '#333'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    fontSize: '16px',\n                    color: '#007bff'\n                  },\n                  children: cityMapping[city]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 105\n                }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [value, \"\\u338D/m\\xB3\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 89\n                }, this), \"\\uC0C1\\uD0DC:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold',\n                    color: getColorByPM10(value)\n                  },\n                  children: parseFloat(value) <= 30 ? '좋음' : parseFloat(value) <= 80 ? '보통' : parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dust-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC218\\uCE58 \\uAE30\\uC900 (PM10)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(76, 80, 175, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this), \" 0~15: \\uB9E4\\uC6B0 \\uC88B\\uC74C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(76, 175, 80, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), \" ~35: \\uC88B\\uC74C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(255, 245, 89, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 15\n            }, this), \" ~75: \\uBCF4\\uD1B5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(255, 152, 0, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 15\n            }, this), \" ~150: \\uB098\\uC068\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(244, 67, 54, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), \" 150+: \\uB9E4\\uC6B0 \\uB098\\uC068\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815\\uC77C\\uC2DC: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/analyze\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"AI-button\",\n            children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"AI-button\",\n            children: \"\\uBA54\\uC778\\uD654\\uBA74\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 284,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c3 = TodayDust;\nexport default TodayDust;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AirQualityGauge\");\n$RefreshReg$(_c2, \"AirQualityDisplay\");\n$RefreshReg$(_c3, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","L","axios","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","AirQualityGauge","label","value","unit","maxValue","colorThresholds","safeValue","isNaN","percentage","Math","min","getColor","threshold","color","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","backgroundColor","_c","AirQualityDisplay","data","parseValue","parsed","parseFloat","gaugeConfigs","pm10","Infinity","pm25","co2","o3","pm10Value","pm25Value","coValue","o3Value","_c2","TodayDust","_s","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","API_KEY","fetchDustData","response","fetch","json","body","items","console","fetchDbData","get","fetchDetailData","region","regionDetail","allItems","matchingItems","filter","item","cityName","sort","a","b","dateA","Date","dataTime","dateB","fetchAllData","dustResult","dbResult","firstRegion","firstRegionDetail","region_detail","detailData","message","getColorByPM10","pmValue","getMarkerStyleByPM10","width","size","borderRadius","border","fontSize","fontWeight","cities","Object","entries","key","map","index","center","zoom","scrollWheelZoom","zoomControl","doubleClickZoom","url","attribution","maxZoom","city","coordinates","markerStyle","icon","divIcon","html","iconSize","parseInt","position","textAlign","fontFamily","to","_c3","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\n// Air Quality Gauge Component\nconst AirQualityGauge = ({ label, value, unit, maxValue, colorThresholds }) => {\n  const safeValue = value && !isNaN(value) ? value : 0;\n  const percentage = Math.min((safeValue / maxValue) * 100, 100);\n  \n  const getColor = (value) => {\n    if (!value || isNaN(value)) return 'rgb(128, 128, 128)';\n    \n    for (const threshold of colorThresholds) {\n      if (value <= threshold.value) {\n        return threshold.color;\n      }\n    }\n    return colorThresholds[colorThresholds.length - 1].color;\n  };\n\n  const color = getColor(safeValue);\n\n  return (\n    <div className=\"flex flex-col items-center w-full max-w-xs p-4\">\n      <div className=\"text-lg font-semibold mb-2\">{label}</div>\n      <div className=\"relative w-full h-48 bg-gray-200 rounded-full overflow-hidden\">\n        <div \n          className=\"absolute bottom-0 w-full transition-all duration-500 ease-out\"\n          style={{\n            height: `${percentage}%`,\n            backgroundColor: color,\n          }}\n        />\n        <div className=\"absolute inset-0 flex items-center justify-center flex-col\">\n          <span className=\"text-2xl font-bold\">\n            {value && !isNaN(value) ? value : '-'}\n          </span>\n          <span className=\"text-sm\">{unit}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Air Quality Display Component\nconst AirQualityDisplay = ({ data }) => {\n  if (!data) {\n    return <div className=\"text-center p-4\">데이터를 불러올 수 없습니다.</div>;\n  }\n\n  const parseValue = (value) => {\n    const parsed = parseFloat(value);\n    return !isNaN(parsed) ? parsed : null;\n  };\n\n  const gaugeConfigs = {\n    pm10: {\n      label: 'PM10',\n      unit: 'μg/m³',\n      maxValue: 200,\n      colorThresholds: [\n        { value: 15, color: 'rgb(76, 80, 175)' },\n        { value: 35, color: 'rgb(76, 175, 80)' },\n        { value: 75, color: 'rgb(255, 245, 89)' },\n        { value: 150, color: 'rgb(255, 152, 0)' },\n        { value: Infinity, color: 'rgb(244, 67, 54)' }\n      ]\n    },\n    pm25: {\n      label: 'PM2.5',\n      unit: 'μg/m³',\n      maxValue: 100,\n      colorThresholds: [\n        { value: 15, color: 'rgb(76, 80, 175)' },\n        { value: 25, color: 'rgb(76, 175, 80)' },\n        { value: 50, color: 'rgb(255, 245, 89)' },\n        { value: 75, color: 'rgb(255, 152, 0)' },\n        { value: Infinity, color: 'rgb(244, 67, 54)' }\n      ]\n    },\n    co2: {\n      label: 'CO2',\n      unit: 'ppm',\n      maxValue: 1000,\n      colorThresholds: [\n        { value: 400, color: 'rgb(76, 175, 80)' },\n        { value: 1000, color: 'rgb(255, 245, 89)' },\n        { value: 2000, color: 'rgb(255, 152, 0)' },\n        { value: Infinity, color: 'rgb(244, 67, 54)' }\n      ]\n    },\n    o3: {\n      label: 'O3',\n      unit: 'ppb',\n      maxValue: 200,\n      colorThresholds: [\n        { value: 30, color: 'rgb(76, 175, 80)' },\n        { value: 90, color: 'rgb(255, 245, 89)' },\n        { value: 150, color: 'rgb(255, 152, 0)' },\n        { value: Infinity, color: 'rgb(244, 67, 54)' }\n      ]\n    }\n  };\n\n  return (\n    <div className=\"flex flex-row justify-center gap-4 p-4\">\n      <AirQualityGauge \n        label={gaugeConfigs.pm10.label}\n        value={parseValue(data.pm10Value)}\n        unit={gaugeConfigs.pm10.unit}\n        maxValue={gaugeConfigs.pm10.maxValue}\n        colorThresholds={gaugeConfigs.pm10.colorThresholds}\n      />\n      <AirQualityGauge \n        label={gaugeConfigs.pm25.label}\n        value={parseValue(data.pm25Value)}\n        unit={gaugeConfigs.pm25.unit}\n        maxValue={gaugeConfigs.pm25.maxValue}\n        colorThresholds={gaugeConfigs.pm25.colorThresholds}\n      />\n      <AirQualityGauge \n        label={gaugeConfigs.co2.label}\n        value={parseValue(data.coValue)}\n        unit={gaugeConfigs.co2.unit}\n        maxValue={gaugeConfigs.co2.maxValue}\n        colorThresholds={gaugeConfigs.co2.colorThresholds}\n      />\n      <AirQualityGauge \n        label={gaugeConfigs.o3.label}\n        value={parseValue(data.o3Value)}\n        unit={gaugeConfigs.o3.unit}\n        maxValue={gaugeConfigs.o3.maxValue}\n        colorThresholds={gaugeConfigs.o3.colorThresholds}\n      />\n    </div>\n  );\n};\n\n// Main TodayDust Component\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n      \n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => {\n        const dateA = new Date(a.dataTime);\n        const dateB = new Date(b.dataTime);\n        return dateB - dateA;\n      });\n      \n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n      \n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          \n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{ \n            region: firstRegion, \n            regionDetail: firstRegionDetail,\n            apiData: detailData \n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n\n  const getMarkerStyleByPM10 = (value) => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)',\n    };\n\n    const pmValue = parseFloat(value);\n    let size = 30;\n    if (pmValue > 15 && pmValue <= 35) size = 35;\n    else if (pmValue > 35 && pmValue <= 75) size = 40;\n    else if (pmValue > 75 && pmValue <= 150) size = 45;\n    else if (pmValue > 150) size = 50;\n\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px',\n      border: '2px solid #333',\n      fontSize: '14px',\n      fontWeight: 'bold',\n    };\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  if (!dustData) {\n    return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n  }\n\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  return (\n    <div className=\"dust-container\">\n      <h2>실시간 대기질 정보</h2>\n      <div className=\"api-data-section\">\n        <ul className=\"api-data-list\">\n          {apiData.map((data) => (\n            <li key={data.region} className=\"api-data-item\">\n              <h4>{data.region} - {data.regionDetail} 지역 정보</h4>\n              {data.apiData.length === 0 ? (\n                <p>해당 지역의 데이터가 없습니다.</p>\n              ) : (\n                data.apiData.map((item, index) => (\n                  <div key={index} className=\"measurement-info\">\n                    <p>측정 시간: {item.dataTime}</p>\n                    <AirQualityDisplay data={item} />\n                  </div>\n                ))\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <main className=\"dust-content\">\n        <p>오늘의 미세먼지 지도</p>\n\n        <MapContainer\n          center={[36.5, 128.5]}\n          zoom={7}\n          scrollWheelZoom={false}\n          zoomControl={false}\n          className=\"map-container\"\n          doubleClickZoom={false}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n            maxZoom={19}\n          />\n\n          {cities.map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            if (!coordinates) return null;\n\n            const markerStyle = getMarkerStyleByPM10(value);\n            const icon = L.divIcon({\n              className: 'custom-icon',\n              html: ` \n                <div class=\"marker-box\" \n                     style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; align-items: center; justify-content: center;\">\n                  <span class=\"marker-label\" \n                        style=\"color: rgb(0, 0, 0, 0.9); font-size: ${markerStyle.fontSize}; font-weight: ${markerStyle.fontWeight};\">\n                    ${cityMapping[city] || city}\n                  </span>\n                </div>`,\n              iconSize: [parseInt(markerStyle.width), parseInt(markerStyle.height)]\n            });\n\n            return (\n              \n              <Marker\n                key={city}\n                position={coordinates}\n                icon={icon}\n              >\n                <Popup>\n                  <div style={{ textAlign: 'center', fontFamily: 'Roboto, sans-serif', color: '#333' }}>\n                    <strong style={{ fontSize: '16px', color: '#007bff' }}>{cityMapping[city]}</strong> <br />\n                    미세먼지(PM10): <span style={{ fontWeight: 'bold' }}>{value}㎍/m³</span> <br />\n                    상태: \n                    <span style={{ fontWeight: 'bold', color: getColorByPM10(value) }}>\n                      {parseFloat(value) <= 30 ? '좋음' :\n                       parseFloat(value) <= 80 ? '보통' :\n                       parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'}\n                    </span>\n                  </div>\n                </Popup>\n              </Marker>\n            );\n          })}\n        </MapContainer>\n        <div className=\"dust-legend\">\n          <h4>미세먼지 수치 기준 (PM10)</h4>\n          <ul>\n            <li>\n              <span style={{ backgroundColor: 'rgba(76, 80, 175, 0.7)' }}></span> 0~15: 매우 좋음\n            </li>\n            <li>\n              <span style={{ backgroundColor: 'rgba(76, 175, 80, 0.7)' }}></span> ~35: 좋음\n            </li>\n            <li>\n              <span style={{ backgroundColor: 'rgba(255, 245, 89, 0.7)' }}></span> ~75: 보통\n            </li>\n            <li>\n              <span style={{ backgroundColor: 'rgba(255, 152, 0, 0.7)' }}></span> ~150: 나쁨\n            </li>\n            <li>\n              <span style={{ backgroundColor: 'rgba(244, 67, 54, 0.7)' }}></span> 150+: 매우 나쁨\n            </li>\n          </ul>\n        </div>\n\n        <p>측정일시: {dustData.dataTime}</p>\n\n        <div className=\"button-container\">\n          <Link to=\"/analyze\">\n            <button className=\"AI-button\">AI 분석 페이지 이동</button>\n          </Link>\n          <Link to=\"/main\">\n            <button className=\"AI-button\">메인화면</button>\n          </Link>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default TodayDust;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}