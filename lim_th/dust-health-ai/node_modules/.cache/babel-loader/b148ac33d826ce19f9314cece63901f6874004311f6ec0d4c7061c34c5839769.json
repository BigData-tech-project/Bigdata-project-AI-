{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\n// 네비게이션 바 컴포넌트\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/todayDust\",\n        className: \"navbar-logo\",\n        children: \"DustAI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navbar-menu\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/analyze\",\n          className: \"navbar-link\",\n          children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dustdata\",\n          className: \"navbar-link\",\n          children: \"\\uBBF8\\uC138\\uBA3C\\uC9C0 \\uB370\\uC774\\uD130\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"navbar-login\",\n          children: \"\\uB85C\\uADF8\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// API 키 설정\n_c = Navbar;\nconst API_KEY = 'pVHLUl3UGVDmm%2BB0aUxMttCQnoCePxtWLb4WJKushUW6XjTX93l89IkU%2FdELSR6nZ318fR3efuSBb3gVpjAFFA%3D%3D';\nconst TodayDust = () => {\n  _s();\n  var _apiData$, _apiData$$apiData$;\n  // 상태 관리\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 미세먼지 데이터 가져오기\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('미세먼지 데이터 가져오기 실패:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 가져오기\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('DB 데이터 가져오기 실패:', error);\n      throw error;\n    }\n  };\n\n  // 상세 데이터 가져오기\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`${region} 상세 데이터 가져오기 실패:`, error);\n      return [];\n    }\n  };\n\n  // 데이터 초기 로드\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n        setDustData(dustResult);\n        setDbData(dbResult);\n        if (dbResult.length > 0) {\n          const {\n            region,\n            region_detail: regionDetail\n          } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n          setApiData([{\n            region,\n            regionDetail,\n            apiData: detailData\n          }]);\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n\n  // 값에 따른 색상 가져오기\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n\n  // 마커 스타일 가져오기\n  const getMarkerStyle = value => {\n    const thresholds = [30, 80, 150];\n    const colors = ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 245, 89, 0.7)', 'rgba(244, 67, 54, 0.7)'];\n    const backgroundColor = getColorByValue(value, thresholds, colors);\n    const size = [30, 32.5, 35, 37.5][thresholds.findIndex(threshold => parseFloat(value) <= threshold) + 1] || 50;\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor,\n      borderRadius: '5px',\n      border: '2px solid #333'\n    };\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 21\n  }, this);\n  if (!dustData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 25\n  }, this);\n\n  // 도시 데이터 필터링\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n\n  // 컴포넌트 렌더링\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-container\",\n      style: {\n        marginTop: '64px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-data-section\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"api-data-list\",\n          children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"api-data-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [data.region, \" \", data.regionDetail, \" \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"measurement-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge-container\",\n                children: [{\n                  value: item.pm10Value,\n                  label: 'PM10(미세먼지)',\n                  max: 150\n                }, {\n                  value: item.pm25Value,\n                  label: 'PM2.5(초미세먼지)',\n                  max: 150\n                }, {\n                  value: item.o3Value,\n                  label: 'O3(오존)',\n                  max: 1\n                }].map(({\n                  value,\n                  label,\n                  max\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gauge\",\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                    value: parseFloat(value) || 0,\n                    maxValue: max,\n                    text: value ? `${value}${label === 'O3(오존)' ? 'ppm' : '㎍/m³'}` : 'N/A',\n                    styles: buildStyles({\n                      pathColor: getColorByValue(value, [15, 50, 100], ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                      textColor: '#333'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 29\n                  }, this)]\n                }, label, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: 'rgba(76, 80, 175, 0.7)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 27\n                  }, this), \" : \\uC88B\\uC74C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: 'rgba(76, 175, 80, 0.7)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 27\n                  }, this), \" : \\uBCF4\\uD1B5\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: 'rgba(255, 245, 89, 0.7)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 27\n                  }, this), \" : \\uB098\\uC068\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      backgroundColor: 'rgba(244, 67, 54, 0.7)'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 27\n                  }, this), \" : \\uB9E4\\uC6B0 \\uB098\\uC068\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 23\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this))]\n          }, data.region, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), dustData.disease && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disease-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [dustData.disease, \" \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uB300\\uCC98 \\uC694\\uB839\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"disease-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"OOO \\uB2D8 \\uD604\\uC7AC \\uC9C0\\uC5ED\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uB18D\\uB3C4\\uB294\", (_apiData$ = apiData[0]) !== null && _apiData$ !== void 0 && (_apiData$$apiData$ = _apiData$.apiData[0]) !== null && _apiData$$apiData$ !== void 0 && _apiData$$apiData$.pm10Value ? `${apiData[0].apiData[0].pm10Value}㎍/m³` : '측정불가', \" \\uC785\\uB2C8\\uB2E4.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"OOO \\uB2D8\\uC740 \", dustData.disease, \" \\uC9C8\\uD658\\uC774 \\uC788\\uC73C\\uC2DC\\uBBC0\\uB85C \\uB2E4\\uC74C\\uACFC \\uAC19\\uC740 \\uB300\\uCC98 \\uC694\\uB839\\uC744 \\uCD94\\uCC9C\\uB4DC\\uB9BD\\uB2C8\\uB2E4.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), dustData.diseaseAdvice && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dustData.diseaseAdvice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 40\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [36.3, 128.5],\n        zoom: 7,\n        scrollWheelZoom: false,\n        zoomControl: false,\n        doubleClickZoom: false,\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 OpenStreetMap contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), cities.map(([city, value]) => {\n          const coordinates = cityCoordinates[cityMapping[city]];\n          if (!coordinates) return null;\n          const markerStyle = getMarkerStyle(value);\n          const icon = L.divIcon({\n            className: 'custom-icon',\n            html: `\n                <div style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; justify-content: center; align-items: center;\">\n                  <span style=\"color: #000; font-weight: bold; font-size: 12px;\">${cityMapping[city]}</span>\n                </div>\n              `\n          });\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: coordinates,\n            icon: icon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  fontFamily: 'Roboto, sans-serif',\n                  color: '#333'\n                },\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/dustdata\",\n                  style: {\n                    fontSize: '16px',\n                    color: '#007bff',\n                    textDecoration: 'none',\n                    fontWeight: 'bold'\n                  },\n                  children: cityMapping[city]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 29\n                }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [value, \"\\u338D/m\\xB3\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 89\n                }, this), \"\\uC0C1\\uD0DC:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: parseFloat(value) <= 30 ? '좋음' : parseFloat(value) <= 80 ? '보통' : parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: 'rgba(76, 80, 175, 0.7)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), \"(0~30) : \\uC88B\\uC74C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: 'rgba(76, 175, 80, 0.7)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), \"(~80) : \\uBCF4\\uD1B5\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: 'rgba(255, 245, 89, 0.7)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), \"(~150) : \\uB098\\uC068\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              backgroundColor: 'rgba(244, 67, 54, 0.7)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), \"(150+) : \\uB9E4\\uC6B0 \\uB098\\uC068\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\xA9 2024 DustAI. All rights reserved.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Privacy Policy | Terms of Service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c2 = TodayDust;\nexport default TodayDust;\nvar _c, _c2;\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","CircularProgressbar","buildStyles","L","axios","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","API_KEY","TodayDust","_s","_apiData$","_apiData$$apiData$","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","fetchDustData","response","fetch","data","json","body","items","console","fetchDbData","get","fetchDetailData","region","regionDetail","allItems","matchingItems","filter","item","cityName","sort","a","b","Date","dataTime","length","fetchAllData","dustResult","dbResult","Promise","all","region_detail","detailData","diseaseInfo","find","prevData","disease","diseaseAdvice","message","getColorByValue","value","thresholds","colors","numericValue","parseFloat","i","getMarkerStyle","backgroundColor","size","findIndex","threshold","width","height","borderRadius","border","cities","Object","entries","key","style","marginTop","map","index","pm10Value","label","max","pm25Value","o3Value","maxValue","text","styles","pathColor","textColor","center","zoom","scrollWheelZoom","zoomControl","doubleClickZoom","url","attribution","city","coordinates","markerStyle","icon","divIcon","html","position","textAlign","fontFamily","color","fontSize","textDecoration","fontWeight","_c2","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\n// 네비게이션 바 컴포넌트\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar\">\n      <div className=\"navbar-container\">\n        <Link to=\"/todayDust\" className=\"navbar-logo\">\n          DustAI\n        </Link>\n        \n        <div className=\"navbar-menu\">\n          <Link to=\"/analyze\" className=\"navbar-link\">\n            AI 분석 페이지 이동\n          </Link>\n          <Link to=\"/dustdata\" className=\"navbar-link\">\n            미세먼지 데이터\n          </Link>\n          <Link to=\"/login\" className=\"navbar-login\">\n            로그인\n          </Link>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// API 키 설정\nconst API_KEY = 'pVHLUl3UGVDmm%2BB0aUxMttCQnoCePxtWLb4WJKushUW6XjTX93l89IkU%2FdELSR6nZ318fR3efuSBb3gVpjAFFA%3D%3D';\n\nconst TodayDust = () => {\n  // 상태 관리\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 미세먼지 데이터 가져오기\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('미세먼지 데이터 가져오기 실패:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 가져오기\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('DB 데이터 가져오기 실패:', error);\n      throw error;\n    }\n  };\n\n  // 상세 데이터 가져오기\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`${region} 상세 데이터 가져오기 실패:`, error);\n      return [];\n    }\n  };\n\n  // 데이터 초기 로드\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n\n        setDustData(dustResult);\n        setDbData(dbResult);\n\n        if (dbResult.length > 0) {\n          const { region, region_detail: regionDetail } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n\n          setApiData([{ region, regionDetail, apiData: detailData }]);\n\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice,\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  // 값에 따른 색상 가져오기\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n\n  // 마커 스타일 가져오기\n  const getMarkerStyle = (value) => {\n    const thresholds = [30, 80, 150];\n    const colors = ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 245, 89, 0.7)', 'rgba(244, 67, 54, 0.7)'];\n\n    const backgroundColor = getColorByValue(value, thresholds, colors);\n    const size = [30, 32.5, 35, 37.5][thresholds.findIndex(threshold => parseFloat(value) <= threshold) + 1] || 50;\n\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor,\n      borderRadius: '5px',\n      border: '2px solid #333',\n    };\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (loading) return <div className=\"loading\">로딩중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n  if (!dustData) return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n\n  // 도시 데이터 필터링\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  // 컴포넌트 렌더링\n  return (\n    <>\n      <Navbar />\n      <div className=\"dust-container\" style={{ marginTop: '64px' }}>\n\n        {/* API 데이터 섹션 */}\n        <div className=\"api-data-section\">\n          <ul className=\"api-data-list\">\n            {apiData.map((data) => (\n              <li key={data.region} className=\"api-data-item\">\n                <h3>{data.region} {data.regionDetail} 대기질 정보</h3>\n                {data.apiData.length === 0 ? (\n                  <p>해당 지역의 데이터가 없습니다.</p>\n                ) : (\n                  data.apiData.map((item, index) => (\n                    <div key={index} className=\"measurement-info\">\n                      <div className=\"gauge-container\">\n                        {[\n                          { value: item.pm10Value, label: 'PM10(미세먼지)', max: 150 },\n                          { value: item.pm25Value, label: 'PM2.5(초미세먼지)', max: 150 },\n                          { value: item.o3Value, label: 'O3(오존)', max: 1 }\n                        ].map(({ value, label, max }) => (\n                          <div key={label} className=\"gauge\">\n                            <CircularProgressbar\n                              value={parseFloat(value) || 0}\n                              maxValue={max}\n                              text={value ? `${value}${label === 'O3(오존)' ? 'ppm' : '㎍/m³'}` : 'N/A'}\n                              styles={buildStyles({\n                                pathColor: getColorByValue(value, [15, 50, 100], ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                                textColor: '#333',\n                              })}\n                            />\n                            <p>{label}</p>\n                          </div> \n                        ))}\n                      </div>\n                      <ul>\n                        <li>\n                          <span style={{ backgroundColor: 'rgba(76, 80, 175, 0.7)' }}></span> : 좋음\n                        </li>\n                        <li>\n                          <span style={{ backgroundColor: 'rgba(76, 175, 80, 0.7)' }}></span> : 보통\n                        </li>\n                        <li>\n                          <span style={{ backgroundColor: 'rgba(255, 245, 89, 0.7)' }}></span> : 나쁨\n                        </li>\n                        <li>\n                          <span style={{ backgroundColor: 'rgba(244, 67, 54, 0.7)' }}></span> : 매우 나쁨\n                        </li>\n                      </ul>\n                    </div>\n                  ))\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* 질병 정보 박스 */}\n        {dustData.disease && (\n        <div className=\"disease-box\">\n          <h3>{dustData.disease} 미세먼지 대처 요령</h3>\n          <div className=\"disease-content\">\n            <p>\n              OOO 님 현재 지역의 미세먼지 농도는 \n               {apiData[0]?.apiData[0]?.pm10Value ? \n                `${apiData[0].apiData[0].pm10Value}㎍/m³` : \n                '측정불가'\n              } 입니다.\n            </p>\n            <p>\n              OOO 님은 {dustData.disease} 질환이 있으시므로 다음과 같은 대처 요령을 추천드립니다.\n            </p>\n            {dustData.diseaseAdvice && <p>{dustData.diseaseAdvice}</p>}\n          </div>\n        </div>\n      )}\n\n        {/* 지도 컨테이너 */}\n        <MapContainer\n          center={[36.3, 128.5]}\n          zoom={7}\n          scrollWheelZoom={false}\n          zoomControl={false}\n          doubleClickZoom={false}\n          className=\"map-container\"\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; OpenStreetMap contributors\"\n          />\n          {cities.map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            if (!coordinates) return null;\n\n            const markerStyle = getMarkerStyle(value);\n            const icon = L.divIcon({\n              className: 'custom-icon',\n              html: `\n                <div style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; justify-content: center; align-items: center;\">\n                  <span style=\"color: #000; font-weight: bold; font-size: 12px;\">${cityMapping[city]}</span>\n                </div>\n              `,\n            });\n            return (\n              <Marker key={city} position={coordinates} icon={icon}>\n                <Popup>\n                  <div style={{ textAlign: 'center', fontFamily: 'Roboto, sans-serif', color: '#333' }}>\n                    <Link \n                      to=\"/dustdata\" \n                      style={{ \n                        fontSize: '16px', \n                        color: '#007bff', \n                        textDecoration: 'none',\n                        fontWeight: 'bold'\n                      }}\n                    >\n                      {cityMapping[city]}\n                    </Link> <br />\n                    미세먼지(PM10): <span style={{ fontWeight: 'bold' }}>{value}㎍/m³</span> <br />\n                    상태: \n                    <span style={{ fontWeight: 'bold' }}>\n                      {parseFloat(value) <= 30 ? '좋음' :\n                       parseFloat(value) <= 80 ? '보통' :\n                       parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'}\n                    </span>\n                  </div>\n                </Popup>\n              </Marker>\n            );\n          })}\n        </MapContainer>\n\n        {/* 범례 */}\n        <ul>\n          <li>\n            <span style={{ backgroundColor: 'rgba(76, 80, 175, 0.7)' }}></span>(0~30) : 좋음\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(76, 175, 80, 0.7)' }}></span>(~80) : 보통\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(255, 245, 89, 0.7)' }}></span>(~150) : 나쁨\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(244, 67, 54, 0.7)' }}></span>(150+) : 매우 나쁨\n          </li>\n        </ul>\n      </div>\n      <footer className=\"footer\">\n        <div className=\"footer-container\">\n          <p>&copy; 2024 DustAI. All rights reserved.</p>\n          <p>Privacy Policy | Terms of Service</p>\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default TodayDust;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}