{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, Tooltip } from 'react-leaflet';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = 'pVHLUl3UGVDmm%2BB0aUxMttCQnoCePxtWLb4WJKushUW6XjTX93l89IkU%2FdELSR6nZ318fR3efuSBb3gVpjAFFA%3D%3D';\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n        setDustData(dustResult);\n        setDbData(dbResult);\n        if (dbResult.length > 0) {\n          const {\n            region,\n            region_detail: regionDetail\n          } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n          setApiData([{\n            region,\n            regionDetail,\n            apiData: detailData\n          }]);\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n  const getMarkerStyle = value => {\n    const thresholds = [30, 80, 150];\n    const colors = ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 245, 89, 0.7)', 'rgba(244, 67, 54, 0.7)'];\n    const backgroundColor = getColorByValue(value, thresholds, colors);\n    const size = [35, 40, 45, 50][thresholds.findIndex(threshold => parseFloat(value) <= threshold) + 1] || 50;\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor,\n      borderRadius: '5px',\n      border: '2px solid #333'\n    };\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 21\n  }, this);\n  if (!dustData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 25\n  }, this);\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dust-Health-AI\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-data-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"api-data-list\",\n        children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"api-data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [data.region, \" - \", data.regionDetail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-info\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gauge-container\",\n              children: [{\n                value: item.pm10Value,\n                label: 'PM10',\n                max: 150\n              }, {\n                value: item.pm25Value,\n                label: 'PM2.5',\n                max: 150\n              }, {\n                value: item.o3Value,\n                label: 'O3',\n                max: 1\n              }].map(({\n                value,\n                label,\n                max\n              }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: parseFloat(value) || 0,\n                  maxValue: max,\n                  text: value ? `${value}${label === 'O3' ? 'ppm' : '㎍/m³'}` : 'N/A',\n                  styles: buildStyles({\n                    pathColor: getColorByValue(value, [15, 50, 100], ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                    textColor: '#333'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 29\n                }, this)]\n              }, label, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 21\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this))]\n        }, data.region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), dustData.disease && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"disease-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [dustData.disease, \" - \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uB300\\uCC98 \\uC694\\uB839\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disease-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dustData.diseaseAdvice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [36.5, 128.5],\n      zoom: 7,\n      scrollWheelZoom: false,\n      className: \"map-container\",\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), cities.map(([city, value]) => {\n        const coordinates = cityCoordinates[cityMapping[city]];\n        if (!coordinates) return null;\n        const markerStyle = getMarkerStyle(value);\n        const icon = L.divIcon({\n          className: 'custom-icon',\n          html: `<div style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border};\"></div>`\n        });\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: coordinates,\n          icon: icon,\n          children: [/*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cityMapping[city]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 55\n              }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", value, \"\\u338D/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            direction: \"top\",\n            offset: [0, -10],\n            opacity: 1,\n            children: cityMapping[city]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, city, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/analyze\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/main\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uBA54\\uC778 \\uD654\\uBA74\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","Tooltip","CircularProgressbar","buildStyles","L","axios","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","API_KEY","TodayDust","_s","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","fetchDustData","response","fetch","data","json","body","items","console","fetchDbData","get","fetchDetailData","region","regionDetail","allItems","matchingItems","filter","item","cityName","sort","a","b","Date","dataTime","length","fetchAllData","dustResult","dbResult","Promise","all","region_detail","detailData","diseaseInfo","find","prevData","disease","diseaseAdvice","message","getColorByValue","value","thresholds","colors","numericValue","parseFloat","i","getMarkerStyle","backgroundColor","size","findIndex","threshold","width","height","borderRadius","border","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","Object","entries","key","map","index","pm10Value","label","max","pm25Value","o3Value","maxValue","text","styles","pathColor","textColor","center","zoom","scrollWheelZoom","url","attribution","city","coordinates","markerStyle","icon","divIcon","html","position","direction","offset","opacity","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup, Tooltip } from 'react-leaflet';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\nconst API_KEY = 'pVHLUl3UGVDmm%2BB0aUxMttCQnoCePxtWLb4WJKushUW6XjTX93l89IkU%2FdELSR6nZ318fR3efuSBb3gVpjAFFA%3D%3D';\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n\n        setDustData(dustResult);\n        setDbData(dbResult);\n\n        if (dbResult.length > 0) {\n          const { region, region_detail: regionDetail } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n\n          setApiData([{ region, regionDetail, apiData: detailData }]);\n\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice,\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n\n  const getMarkerStyle = (value) => {\n    const thresholds = [30, 80, 150];\n    const colors = ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(255, 245, 89, 0.7)', 'rgba(244, 67, 54, 0.7)'];\n\n    const backgroundColor = getColorByValue(value, thresholds, colors);\n    const size = [35, 40, 45, 50][thresholds.findIndex(threshold => parseFloat(value) <= threshold) + 1] || 50;\n\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor,\n      borderRadius: '5px',\n      border: '2px solid #333',\n    };\n  };\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (error) return <div className=\"error\">Error: {error}</div>;\n  if (!dustData) return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  return (\n    <div className=\"dust-container\">\n      <h1>Dust-Health-AI</h1>\n\n      <div className=\"api-data-section\">\n        <ul className=\"api-data-list\">\n          {apiData.map((data) => (\n            <li key={data.region} className=\"api-data-item\">\n              <h4>{data.region} - {data.regionDetail}</h4>\n              {data.apiData.length === 0 ? (\n                <p>해당 지역의 데이터가 없습니다.</p>\n              ) : (\n                data.apiData.map((item, index) => (\n                  <div key={index} className=\"measurement-info\">\n                    <div className=\"gauge-container\">\n                      {[{ value: item.pm10Value, label: 'PM10', max: 150 },\n                        { value: item.pm25Value, label: 'PM2.5', max: 150 },\n                        { value: item.o3Value, label: 'O3', max: 1 }].map(({ value, label, max }) => (\n                          <div key={label} className=\"gauge\">\n                            <CircularProgressbar\n                              value={parseFloat(value) || 0}\n                              maxValue={max}\n                              text={value ? `${value}${label === 'O3' ? 'ppm' : '㎍/m³'}` : 'N/A'}\n                              styles={buildStyles({\n                                pathColor: getColorByValue(value, [15, 50, 100], ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                                textColor: '#333',\n                              })}\n                            />\n                            <p>{label}</p>\n                          </div>\n                        ))}\n                    </div>\n                  </div>\n                ))\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      {dustData.disease && (\n        <div className=\"disease-box\">\n          <h3>{dustData.disease} - 미세먼지 대처 요령</h3>\n          <div className=\"disease-content\">\n            <p>{dustData.diseaseAdvice}</p>\n          </div>\n        </div>\n      )}\n\n      <MapContainer\n        center={[36.5, 128.5]}\n        zoom={7}\n        scrollWheelZoom={false}\n        className=\"map-container\"\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        {cities.map(([city, value]) => {\n          const coordinates = cityCoordinates[cityMapping[city]];\n          if (!coordinates) return null;\n\n          const markerStyle = getMarkerStyle(value);\n          const icon = L.divIcon({\n            className: 'custom-icon',\n            html: `<div style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border};\"></div>`,\n          });\n\n          return (\n            <Marker key={city} position={coordinates} icon={icon}>\n              <Popup>\n                <div>\n                  <strong>{cityMapping[city]}</strong><br />\n                  미세먼지(PM10): {value}㎍/m³\n                </div>\n              </Popup>\n              {/* Tooltip 추가 */}\n              <Tooltip direction=\"top\" offset={[0, -10]} opacity={1}>\n                {cityMapping[city]}\n              </Tooltip>\n            </Marker>\n          );\n        })}\n      </MapContainer>\n\n      <div className=\"button-container\">\n        <Link to=\"/analyze\">\n          <button>AI 분석 페이지 이동</button>\n        </Link>\n        <Link to=\"/main\">\n          <button>메인 화면</button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}