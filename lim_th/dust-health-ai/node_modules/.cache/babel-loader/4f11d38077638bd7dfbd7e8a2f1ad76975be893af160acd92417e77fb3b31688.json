{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n\n  // 전국 미세먼지 데이터 조회\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 조회\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      console.log('DB 데이터:', response.data); // DB 데이터 확인\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  // 시도별 상세 데이터 조회 - 특정 측정소 데이터만 필터링\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      console.log('Fetching detail data for:', region, 'regionDetail:', regionDetail); // 파라미터 확인\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n\n      // 전체 측정소 데이터 중에서 region_Detail과 일치하는 측정소 데이터만 필터링\n      const allItems = response.data.response.body.items;\n      console.log('모든 측정소 데이터:', allItems); // 전체 데이터 확인\n\n      const filteredItems = allItems.filter(item => {\n        console.log('비교:', item.stationName, regionDetail); // 필터링 과정 확인\n        return item.stationName === regionDetail;\n      });\n      console.log('필터링된 데이터:', filteredItems); // 필터링 결과 확인\n      return filteredItems;\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        // 1. 기본 미세먼지 데이터 조회\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n\n        // 2. DB 데이터 조회\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        // 3. DB 데이터의 region과 region_Detail을 기반으로 상세 데이터 조회\n        if (dbResult.length > 0) {\n          console.log('첫 번째 DB 데이터:', dbResult[0]); // DB 데이터 구조 확인\n\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail; // region_detail로 수정\n\n          console.log('region:', firstRegion, 'regionDetail:', firstRegionDetail); // 값 확인\n\n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{\n            region: firstRegion,\n            regionDetail: firstRegionDetail,\n            apiData: detailData\n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n\n  // PM10 수치에 따라 색상을 반환하는 함수\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n\n  // PM10 수치에 따라 사각형 마커의 스타일과 지역명을 반환하는 함수\n  const getMarkerStyleByPM10 = value => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)'\n    };\n    const pmValue = parseFloat(value);\n\n    // PM10 수치에 따라 크기를 단계별로 설정\n    let size = 30; // 기본값\n    if (pmValue > 15 && pmValue <= 35) size = 35;else if (pmValue > 35 && pmValue <= 75) size = 40;else if (pmValue > 75 && pmValue <= 150) size = 45;else if (pmValue > 150) size = 50;\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px',\n      // 사각형 모양\n      border: '2px solid #333',\n      fontSize: '14px',\n      // 한글 지역명에 맞게 폰트 크기 조정\n      fontWeight: 'bold'\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }, this);\n  }\n  if (!dustData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this);\n  }\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83C\\uDF0D \\uC2E4\\uC2DC\\uAC04 \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC9C0\\uC5ED\\uBCC4 \\uC0C1\\uC138 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), dbData.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"DB \\uB370\\uC774\\uD130 \\uD655\\uC778: \", dbData[0].region, \" / \", dbData[0].region_detail]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"api-data-list\",\n        children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"api-data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [data.region, \" - \", data.regionDetail, \" \\uCE21\\uC815\\uC18C \\uC815\\uBCF4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD574\\uB2F9 \\uCE21\\uC815\\uC18C\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCE21\\uC815\\uC18C: \", item.stationName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"PM10: \", item.pm10Value, \"\\u338D/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"PM2.5: \", item.pm25Value, \"\\u338D/m\\xB3\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 19\n          }, this))]\n        }, data.region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dust-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [36.5, 128.5],\n        zoom: 7,\n        scrollWheelZoom: false\n        //dragging={false}\n        ,\n        zoomControl: false,\n        className: \"map-container\",\n        doubleClickZoom: false // 더블 클릭 확대 비활성화\n        ,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\",\n          maxZoom: 19\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this), cities.map(([city, value]) => {\n          const coordinates = cityCoordinates[cityMapping[city]];\n          if (!coordinates) return null;\n          const markerStyle = getMarkerStyleByPM10(value);\n          const icon = L.divIcon({\n            className: 'custom-icon',\n            html: ` \n                <div class=\"marker-box\" \n                     style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; align-items: center; justify-content: center;\">\n                  <span class=\"marker-label\" \n                        style=\"color: rgb(0, 0, 0, 0.9); font-size: ${markerStyle.fontSize}; font-weight: ${markerStyle.fontWeight};\">\n                    ${cityMapping[city] || city}\n                  </span>\n                </div>`,\n            iconSize: [parseInt(markerStyle.width), parseInt(markerStyle.height)] // 아이콘 크기 설정\n          });\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: coordinates,\n            icon: icon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center',\n                  fontFamily: 'Roboto, sans-serif',\n                  color: '#333'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  style: {\n                    fontSize: '16px',\n                    color: '#007bff'\n                  },\n                  children: cityMapping[city]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 105\n                }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold'\n                  },\n                  children: [value, \"\\u338D/m\\xB3\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 33\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 89\n                }, this), \"\\uC0C1\\uD0DC:\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: 'bold',\n                    color: getColorByPM10(value)\n                  },\n                  children: parseFloat(value) <= 30 ? '좋음' : parseFloat(value) <= 80 ? '보통' : parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this)\n          }, city, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dust-legend\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC218\\uCE58 \\uAE30\\uC900 (PM10)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(76, 80, 175, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 13\n            }, this), \" 0~15: \\uB9E4\\uC6B0 \\uC88B\\uC74C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(76, 175, 80, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 13\n            }, this), \" ~35: \\uC88B\\uC74C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(255, 245, 89, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 13\n            }, this), \" ~75: \\uBCF4\\uD1B5\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(255, 152, 0, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 13\n            }, this), \" ~150: \\uB098\\uC068\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                backgroundColor: 'rgba(244, 67, 54, 0.7)'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 13\n            }, this), \" 150+: \\uB9E4\\uC6B0 \\uB098\\uC068\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815\\uC77C\\uC2DC: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/analyze\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"AI-button\",\n            children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"AI-button\",\n            children: \"\\uBA54\\uC778\\uD654\\uBA74\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","L","axios","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","API_KEY","fetchDustData","response","fetch","data","json","body","items","console","fetchDbData","get","log","fetchDetailData","region","regionDetail","allItems","filteredItems","filter","item","stationName","fetchAllData","dustResult","dbResult","length","firstRegion","firstRegionDetail","region_detail","detailData","message","getColorByPM10","value","pmValue","parseFloat","getMarkerStyleByPM10","width","height","backgroundColor","size","borderRadius","border","fontSize","fontWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","Object","entries","key","map","index","pm10Value","pm25Value","center","zoom","scrollWheelZoom","zoomControl","doubleClickZoom","url","attribution","maxZoom","city","coordinates","markerStyle","icon","divIcon","html","iconSize","parseInt","position","style","textAlign","fontFamily","color","dataTime","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n\n  // 전국 미세먼지 데이터 조회\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 조회\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      console.log('DB 데이터:', response.data); // DB 데이터 확인\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  // 시도별 상세 데이터 조회 - 특정 측정소 데이터만 필터링\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      console.log('Fetching detail data for:', region, 'regionDetail:', regionDetail); // 파라미터 확인\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n      \n      // 전체 측정소 데이터 중에서 region_Detail과 일치하는 측정소 데이터만 필터링\n      const allItems = response.data.response.body.items;\n      console.log('모든 측정소 데이터:', allItems); // 전체 데이터 확인\n      \n      const filteredItems = allItems.filter(item => {\n        console.log('비교:', item.stationName, regionDetail); // 필터링 과정 확인\n        return item.stationName === regionDetail;\n      });\n      \n      console.log('필터링된 데이터:', filteredItems); // 필터링 결과 확인\n      return filteredItems;\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        // 1. 기본 미세먼지 데이터 조회\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n\n        // 2. DB 데이터 조회\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        // 3. DB 데이터의 region과 region_Detail을 기반으로 상세 데이터 조회\n        if (dbResult.length > 0) {\n          console.log('첫 번째 DB 데이터:', dbResult[0]); // DB 데이터 구조 확인\n          \n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail; // region_detail로 수정\n          \n          console.log('region:', firstRegion, 'regionDetail:', firstRegionDetail); // 값 확인\n          \n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{ \n            region: firstRegion, \n            regionDetail: firstRegionDetail,\n            apiData: detailData \n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  // PM10 수치에 따라 색상을 반환하는 함수\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n\n  // PM10 수치에 따라 사각형 마커의 스타일과 지역명을 반환하는 함수\n  const getMarkerStyleByPM10 = (value) => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)',\n    };\n\n    const pmValue = parseFloat(value);\n  \n    // PM10 수치에 따라 크기를 단계별로 설정\n    let size = 30; // 기본값\n    if (pmValue > 15 && pmValue <= 35) size = 35;\n    else if (pmValue > 35 && pmValue <= 75) size = 40;\n    else if (pmValue > 75 && pmValue <= 150) size = 45;\n    else if (pmValue > 150) size = 50;\n\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px', // 사각형 모양\n      border: '2px solid #333',\n      fontSize: '14px', // 한글 지역명에 맞게 폰트 크기 조정\n      fontWeight: 'bold',\n    };\n  };\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  if (!dustData) {\n    return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n  }\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  return (\n    <div className=\"dust-container\">\n      <h2>🌍 실시간 대기질 정보</h2>\n      {/* API 데이터 표시 - 디버깅 정보 추가 */}\n      <div className=\"api-data-section\">\n        <h3>지역별 상세 정보</h3>\n        {dbData.length > 0 && (\n          <p>DB 데이터 확인: {dbData[0].region} / {dbData[0].region_detail}</p>\n        )}\n        <ul className=\"api-data-list\">\n          {apiData.map((data) => (\n            <li key={data.region} className=\"api-data-item\">\n              <h4>{data.region} - {data.regionDetail} 측정소 정보</h4>\n              {data.apiData.length === 0 ? (\n                <p>해당 측정소의 데이터가 없습니다.</p>\n              ) : (\n                data.apiData.map((item, index) => (\n                  <div key={index} className=\"measurement-info\">\n                    <p>측정소: {item.stationName}</p>\n                    <p>PM10: {item.pm10Value}㎍/m³</p>\n                    <p>PM2.5: {item.pm25Value}㎍/m³</p>\n                  </div>\n                ))\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n      <main className=\"dust-content\">\n        <p>오늘의 미세먼지 지도</p>\n\n        <MapContainer\n          center={[36.5, 128.5]}\n          zoom={7}\n          scrollWheelZoom={false}\n          //dragging={false}\n          zoomControl={false}\n          className=\"map-container\"\n          doubleClickZoom={false} // 더블 클릭 확대 비활성화\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n            maxZoom={19}\n          />\n\n          {cities.map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            if (!coordinates) return null;\n\n            const markerStyle = getMarkerStyleByPM10(value);\n            const icon = L.divIcon({\n              className: 'custom-icon',\n              html: ` \n                <div class=\"marker-box\" \n                     style=\"width:${markerStyle.width}; height:${markerStyle.height}; background-color:${markerStyle.backgroundColor}; border-radius:${markerStyle.borderRadius}; border:${markerStyle.border}; display: flex; align-items: center; justify-content: center;\">\n                  <span class=\"marker-label\" \n                        style=\"color: rgb(0, 0, 0, 0.9); font-size: ${markerStyle.fontSize}; font-weight: ${markerStyle.fontWeight};\">\n                    ${cityMapping[city] || city}\n                  </span>\n                </div>`,\n              iconSize: [parseInt(markerStyle.width), parseInt(markerStyle.height)] // 아이콘 크기 설정\n            });\n\n            return (\n              <Marker\n                key={city}\n                position={coordinates}\n                icon={icon}\n              >\n                <Popup>\n                  <div style={{ textAlign: 'center', fontFamily: 'Roboto, sans-serif', color: '#333' }}>\n                    <strong style={{ fontSize: '16px', color: '#007bff' }}>{cityMapping[city]}</strong> <br />\n                    미세먼지(PM10): <span style={{ fontWeight: 'bold' }}>{value}㎍/m³</span> <br />\n                    상태: \n                    <span style={{ fontWeight: 'bold', color: getColorByPM10(value) }}>\n                      {parseFloat(value) <= 30 ? '좋음' :\n                       parseFloat(value) <= 80 ? '보통' :\n                       parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'}\n                    </span>\n                  </div>\n                </Popup>\n              </Marker>\n            );\n          })}\n        </MapContainer>\n        <div className=\"dust-legend\">\n        <h4>미세먼지 수치 기준 (PM10)</h4>\n        <ul>\n          <li>\n            <span style={{ backgroundColor: 'rgba(76, 80, 175, 0.7)' }}></span> 0~15: 매우 좋음\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(76, 175, 80, 0.7)' }}></span> ~35: 좋음\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(255, 245, 89, 0.7)' }}></span> ~75: 보통\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(255, 152, 0, 0.7)' }}></span> ~150: 나쁨\n          </li>\n          <li>\n            <span style={{ backgroundColor: 'rgba(244, 67, 54, 0.7)' }}></span> 150+: 매우 나쁨\n          </li>\n        </ul>\n      </div>\n      \n\n        <p>측정일시: {dustData.dataTime}</p>\n\n        <div className=\"button-container\">\n          <Link to=\"/analyze\">\n            <button className=\"AI-button\">AI 분석 페이지 이동</button>\n          </Link>\n          <Link to=\"/main\">\n            <button className=\"AI-button\">메인화면</button>\n          </Link>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}