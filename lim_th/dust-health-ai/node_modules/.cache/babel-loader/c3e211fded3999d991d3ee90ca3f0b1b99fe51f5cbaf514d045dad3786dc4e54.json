{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  var _apiData$;\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(null); // 시간 선택 상태 추가\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 상세 데이터 가져오기\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=10000&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail).sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime)).slice(0, 24); // 최근 24시간 데이터\n\n      return matchingItems;\n    } catch (error) {\n      console.error(`${region} 상세 데이터 가져오기 실패:`, error);\n      return [];\n    }\n  };\n\n  // 데이터 초기 로드\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n        setDustData(dustResult);\n        setDbData(dbResult);\n        if (dbResult.length > 0) {\n          const {\n            region,\n            region_detail: regionDetail\n          } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n          setApiData([{\n            region,\n            regionDetail,\n            apiData: detailData\n          }]);\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const handleTimeChange = e => {\n    setSelectedTime(e.target.value); // 시간 선택 시 상태 변경\n  };\n  const getSelectedTimeData = () => {\n    if (!selectedTime || !apiData.length) return null;\n    const selectedData = apiData[0].apiData.find(item => item.dataTime === selectedTime);\n    return selectedData || null;\n  };\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: \"\\uB85C\\uB529\\uC911...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: [\"\\uC5D0\\uB7EC: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 21\n  }, this);\n  if (!dustData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 25\n  }, this);\n  const selectedTimeData = getSelectedTimeData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-container\",\n      style: {\n        marginTop: '64px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-selector\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleTimeChange,\n          className: \"time-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"\\uC2DC\\uAC04 \\uC120\\uD0DD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), (_apiData$ = apiData[0]) === null || _apiData$ === void 0 ? void 0 : _apiData$.apiData.map((timeData, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: timeData.dataTime,\n            children: timeData.dataTime\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"api-data-section\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"api-data-list\",\n          children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"api-data-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"region-name\",\n                children: data.region\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"region-detail\",\n                children: [\" \", data.regionDetail]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), \" \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"measurement-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge-container\",\n                children: [{\n                  value: selectedTimeData === null || selectedTimeData === void 0 ? void 0 : selectedTimeData.pm10Value,\n                  label: 'PM10(미세먼지)',\n                  max: 150\n                }, {\n                  value: selectedTimeData === null || selectedTimeData === void 0 ? void 0 : selectedTimeData.pm25Value,\n                  label: 'PM2.5(초미세먼지)',\n                  max: 150\n                }, {\n                  value: selectedTimeData === null || selectedTimeData === void 0 ? void 0 : selectedTimeData.o3Value,\n                  label: 'O3(오존)',\n                  max: 1\n                }].map(({\n                  value,\n                  label,\n                  max\n                }) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gauge\",\n                  children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                    value: parseFloat(value) || 0,\n                    maxValue: max,\n                    text: value ? `${value}${label === 'O3(오존)' ? 'ppm' : '㎍/m³'}` : 'N/A',\n                    styles: buildStyles({\n                      pathColor: getColorByValue(value, [15, 50, 100], ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                      textColor: '#333'\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 128,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 29\n                  }, this)]\n                }, label, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 27\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this))]\n          }, data.region, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(TodayDust, \"/Um0nfXZ80QTSuHmgCorUsgWqSk=\");\n_c = TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["TodayDust","_s","_apiData$","dustData","setDustData","useState","dbData","setDbData","apiData","setApiData","selectedTime","setSelectedTime","loading","setLoading","error","setError","fetchDetailData","region","regionDetail","response","axios","get","API_KEY","allItems","data","body","items","matchingItems","filter","item","cityName","sort","a","b","Date","dataTime","slice","console","useEffect","fetchAllData","dustResult","dbResult","Promise","all","fetchDustData","fetchDbData","length","region_detail","detailData","diseaseInfo","find","prevData","disease","diseaseAdvice","message","handleTimeChange","e","target","value","getSelectedTimeData","selectedData","getColorByValue","thresholds","colors","numericValue","parseFloat","i","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","selectedTimeData","_Fragment","Navbar","style","marginTop","onChange","map","timeData","idx","index","pm10Value","label","max","pm25Value","o3Value","CircularProgressbar","maxValue","text","styles","buildStyles","pathColor","textColor","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["const TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [selectedTime, setSelectedTime] = useState(null);  // 시간 선택 상태 추가\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // 상세 데이터 가져오기\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=10000&returnType=json&serviceKey=${API_KEY}`\n      );\n  \n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems\n        .filter(item => item.cityName === regionDetail)\n        .sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime))\n        .slice(0, 24); // 최근 24시간 데이터\n  \n      return matchingItems;\n    } catch (error) {\n      console.error(`${region} 상세 데이터 가져오기 실패:`, error);\n      return [];\n    }\n  };\n\n  // 데이터 초기 로드\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const [dustResult, dbResult] = await Promise.all([fetchDustData(), fetchDbData()]);\n\n        setDustData(dustResult);\n        setDbData(dbResult);\n\n        if (dbResult.length > 0) {\n          const { region, region_detail: regionDetail } = dbResult[0];\n          const detailData = await fetchDetailData(region, regionDetail);\n\n          setApiData([{ region, regionDetail, apiData: detailData }]);\n\n          const diseaseInfo = dbResult.find(item => item.region === region);\n          if (diseaseInfo) {\n            setDustData(prevData => ({\n              ...prevData,\n              disease: diseaseInfo.disease,\n              diseaseAdvice: diseaseInfo.diseaseAdvice,\n            }));\n          }\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  const handleTimeChange = (e) => {\n    setSelectedTime(e.target.value);  // 시간 선택 시 상태 변경\n  };\n\n  const getSelectedTimeData = () => {\n    if (!selectedTime || !apiData.length) return null;\n    const selectedData = apiData[0].apiData.find(item => item.dataTime === selectedTime);\n    return selectedData || null;\n  };\n\n  const getColorByValue = (value, thresholds, colors) => {\n    if (!value || value === '-') return colors[0];\n    const numericValue = parseFloat(value);\n    for (let i = 0; i < thresholds.length; i++) {\n      if (numericValue <= thresholds[i]) return colors[i + 1];\n    }\n    return colors[colors.length - 1];\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (loading) return <div className=\"loading\">로딩중...</div>;\n  if (error) return <div className=\"error\">에러: {error}</div>;\n  if (!dustData) return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n\n  const selectedTimeData = getSelectedTimeData();\n  \n  return (\n    <>\n      <Navbar />\n      <div className=\"dust-container\" style={{ marginTop: '64px' }}>\n\n        {/* 시간 선택 섹션 */}\n        <div className=\"time-selector\">\n          <select onChange={handleTimeChange} className=\"time-select\">\n            <option value=\"\">시간 선택</option>\n            {apiData[0]?.apiData.map((timeData, idx) => (\n              <option key={idx} value={timeData.dataTime}>\n                {timeData.dataTime}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* API 데이터 섹션 */}\n        <div className=\"api-data-section\">\n          <ul className=\"api-data-list\">\n            {apiData.map((data) => (\n              <li key={data.region} className=\"api-data-item\">\n                <h3>\n                  <span className=\"region-name\">{data.region}</span> \n                  <span className=\"region-detail\"> {data.regionDetail}</span> 대기질 정보\n                </h3>\n                {data.apiData.length === 0 ? (\n                  <p>해당 지역의 데이터가 없습니다.</p>\n                ) : (\n                  data.apiData.map((item, index) => (\n                    <div key={index} className=\"measurement-info\">\n                      <div className=\"gauge-container\">\n                        {[ \n                          { value: selectedTimeData?.pm10Value, label: 'PM10(미세먼지)', max: 150 },\n                          { value: selectedTimeData?.pm25Value, label: 'PM2.5(초미세먼지)', max: 150 },\n                          { value: selectedTimeData?.o3Value, label: 'O3(오존)', max: 1 }\n                        ].map(({ value, label, max }) => (\n                          <div key={label} className=\"gauge\">\n                            <CircularProgressbar\n                              value={parseFloat(value) || 0}\n                              maxValue={max}\n                              text={value ? `${value}${label === 'O3(오존)' ? 'ppm' : '㎍/m³'}` : 'N/A'}\n                              styles={buildStyles({\n                                pathColor: getColorByValue(value, [15, 50, 100], \n                                  ['rgba(128, 128, 128, 0.7)', 'rgba(76, 80, 175, 0.7)', 'rgba(76, 175, 80, 0.7)', 'rgba(244, 67, 54, 0.7)']),\n                                textColor: '#333',\n                              })}\n                            />\n                            <p>{label}</p>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  ))\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* 지도 및 범례, 기타 컨텐츠 */}\n        {/* (생략) */}\n      </div>\n    </>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}