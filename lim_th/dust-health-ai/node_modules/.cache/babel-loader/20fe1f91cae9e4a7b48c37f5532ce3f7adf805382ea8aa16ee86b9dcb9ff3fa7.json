{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cityCoordinates = {\n  서울: [37.5665, 126.9780],\n  부산: [35.1796, 129.0756],\n  대구: [35.8714, 128.6014],\n  인천: [37.4563, 126.7052],\n  광주: [35.1595, 126.8526],\n  대전: [36.3504, 127.3845],\n  울산: [35.5396, 129.3114],\n  경기: [37.2636, 127.0286],\n  강원: [37.8228, 128.1555],\n  충북: [36.6355, 127.4913],\n  충남: [36.5184, 126.8000],\n  전북: [35.8200, 127.1088],\n  전남: [34.8679, 126.9910],\n  경북: [36.5752, 128.5056],\n  경남: [35.4606, 128.2132],\n  제주: [33.4996, 126.5312]\n};\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=YOUR_SERVICE_KEY');\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'gray';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 'green';\n    if (pmValue <= 80) return 'yellow';\n    if (pmValue <= 150) return 'orange';\n    return 'red';\n  };\n  const getRadiusByPM10 = value => {\n    if (!value || value === '-') return 5;\n    const pmValue = parseFloat(value);\n    return pmValue / 10 + 5;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"today-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"today-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodayDust Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"today-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: [36.5, 127.5],\n          zoom: 7,\n          scrollWheelZoom: true,\n          style: {\n            width: '100%',\n            height: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n            attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), cities.map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            if (!coordinates) return null;\n            return /*#__PURE__*/_jsxDEV(CircleMarker, {\n              center: coordinates,\n              radius: getRadiusByPM10(value),\n              color: getColorByPM10(value),\n              fillOpacity: 0.7,\n              children: /*#__PURE__*/_jsxDEV(Popup, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cityMapping[city]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 58\n                }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", value, \"\\u338D/m\\xB3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, city, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815\\uC77C\\uC2DC: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uB9DE\\uCDA4 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/analyze\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"AI-button\",\n          children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/main\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-button\",\n        children: \"Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"K+Gs8WVuwoFb+4oEtPvW/SMHkbA=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","CircleMarker","Popup","cityMapping","jsxDEV","_jsxDEV","cityCoordinates","서울","부산","대구","인천","광주","대전","울산","경기","강원","충북","충남","전북","전남","경북","경남","제주","TodayDust","_s","dustData","setDustData","loading","setLoading","fetchData","response","fetch","data","json","body","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","Object","entries","filter","key","getColorByPM10","value","pmValue","parseFloat","getRadiusByPM10","className","center","zoom","scrollWheelZoom","style","width","height","url","attribution","map","city","coordinates","radius","color","fillOpacity","dataTime","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\n\nconst cityCoordinates = {\n  서울: [37.5665, 126.9780],\n  부산: [35.1796, 129.0756],\n  대구: [35.8714, 128.6014],\n  인천: [37.4563, 126.7052],\n  광주: [35.1595, 126.8526],\n  대전: [36.3504, 127.3845],\n  울산: [35.5396, 129.3114],\n  경기: [37.2636, 127.0286],\n  강원: [37.8228, 128.1555],\n  충북: [36.6355, 127.4913],\n  충남: [36.5184, 126.8000],\n  전북: [35.8200, 127.1088],\n  전남: [34.8679, 126.9910],\n  경북: [36.5752, 128.5056],\n  경남: [35.4606, 128.2132],\n  제주: [33.4996, 126.5312]\n};\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          'https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=YOUR_SERVICE_KEY'\n        );\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'gray';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 'green';\n    if (pmValue <= 80) return 'yellow';\n    if (pmValue <= 150) return 'orange';\n    return 'red';\n  };\n\n  const getRadiusByPM10 = (value) => {\n    if (!value || value === '-') return 5;\n    const pmValue = parseFloat(value);\n    return pmValue / 10 + 5;\n  };\n\n  return (\n    <div className=\"today-container\">\n      <header className=\"today-header\">\n        <h1>TodayDust Page</h1>\n      </header>\n\n      <main className=\"today-content\">\n        <p>오늘의 미세먼지 지도</p>\n\n        <div className=\"map-container\">\n          <MapContainer\n            center={[36.5, 127.5]}\n            zoom={7}\n            scrollWheelZoom={true}\n            style={{ width: '100%', height: '100%' }}\n          >\n            <TileLayer\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n              attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n            />\n\n            {cities.map(([city, value]) => {\n              const coordinates = cityCoordinates[cityMapping[city]];\n              if (!coordinates) return null;\n\n              return (\n                <CircleMarker\n                  key={city}\n                  center={coordinates}\n                  radius={getRadiusByPM10(value)}\n                  color={getColorByPM10(value)}\n                  fillOpacity={0.7}\n                >\n                  <Popup>\n                    <strong>{cityMapping[city]}</strong> <br />\n                    미세먼지(PM10): {value}㎍/m³\n                  </Popup>\n                </CircleMarker>\n              );\n            })}\n          </MapContainer>\n        </div>\n\n        <p>측정일시: {dustData.dataTime}</p>\n\n        <p>사용자 맞춤 분석</p>\n        <Link to=\"/analyze\">\n          <button className=\"AI-button\">AI 분석 페이지 이동</button>\n        </Link>\n      </main>\n\n      <Link to=\"/main\">\n        <button className=\"main-button\">Main</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}