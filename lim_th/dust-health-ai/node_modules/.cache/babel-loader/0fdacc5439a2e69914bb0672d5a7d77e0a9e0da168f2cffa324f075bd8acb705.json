{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\components\\\\KoreaMap.js\";\nimport React from 'react';\nimport '../css/todaydust.css';\nimport { ReactComponent as KoreaMapSVG } from '../assets/korea_map.svg'; // SVG 파일을 React 컴포넌트로 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KoreaMap = ({\n  dustData\n}) => {\n  // 미세먼지 농도에 따라 색상 변경 함수\n  const getDustColor = value => {\n    if (!value) return '#ccc'; // 데이터가 없을 경우 회색\n    const numValue = Number(value);\n    if (numValue <= 30) return '#00e676'; // 좋음 (초록)\n    if (numValue <= 80) return '#ffeb3b'; // 보통 (노랑)\n    if (numValue <= 150) return '#ff9800'; // 나쁨 (주황)\n    return '#ff1744'; // 매우 나쁨 (빨강)\n  };\n\n  // 각 도시별로 미세먼지 농도 색상 적용\n  const setDustColor = city => {\n    return getDustColor(dustData[city]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"korea-map-container\",\n    children: /*#__PURE__*/_jsxDEV(KoreaMapSVG, {\n      className: \"korea-map\",\n      children: /*#__PURE__*/_jsxDEV(\"g\", {\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          id: \"seoul\",\n          d: \"M132.666,290.394L133.241,290.724...\" // 서울 경로 데이터\n          ,\n          fill: setDustColor('seoul')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n          id: \"busan\",\n          d: \"M330.666,400.394L330.241,400.724...\" // 부산 경로 데이터\n          ,\n          fill: setDustColor('busan')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = KoreaMap;\nexport default KoreaMap;\nvar _c;\n$RefreshReg$(_c, \"KoreaMap\");","map":{"version":3,"names":["React","ReactComponent","KoreaMapSVG","jsxDEV","_jsxDEV","KoreaMap","dustData","getDustColor","value","numValue","Number","setDustColor","city","className","children","id","d","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/components/KoreaMap.js"],"sourcesContent":["import React from 'react';\r\nimport '../css/todaydust.css';\r\nimport { ReactComponent as KoreaMapSVG } from '../assets/korea_map.svg'; // SVG 파일을 React 컴포넌트로 임포트\r\n\r\nconst KoreaMap = ({ dustData }) => {\r\n  // 미세먼지 농도에 따라 색상 변경 함수\r\n  const getDustColor = (value) => {\r\n    if (!value) return '#ccc'; // 데이터가 없을 경우 회색\r\n    const numValue = Number(value);\r\n    if (numValue <= 30) return '#00e676'; // 좋음 (초록)\r\n    if (numValue <= 80) return '#ffeb3b'; // 보통 (노랑)\r\n    if (numValue <= 150) return '#ff9800'; // 나쁨 (주황)\r\n    return '#ff1744'; // 매우 나쁨 (빨강)\r\n  };\r\n\r\n  // 각 도시별로 미세먼지 농도 색상 적용\r\n  const setDustColor = (city) => {\r\n    return getDustColor(dustData[city]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"korea-map-container\">\r\n      {/* SVG 컴포넌트 렌더링 */}\r\n      <KoreaMapSVG className=\"korea-map\">\r\n        {/* 각 지역에 미세먼지 농도 색상 적용 (예시로 서울과 부산만) */}\r\n        <g>\r\n          <path\r\n            id=\"seoul\"\r\n            d=\"M132.666,290.394L133.241,290.724...\" // 서울 경로 데이터\r\n            fill={setDustColor('seoul')}\r\n          />\r\n          <path\r\n            id=\"busan\"\r\n            d=\"M330.666,400.394L330.241,400.724...\" // 부산 경로 데이터\r\n            fill={setDustColor('busan')}\r\n          />\r\n          {/* 다른 지역들 추가 */}\r\n        </g>\r\n      </KoreaMapSVG>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KoreaMap;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAC7B,SAASC,cAAc,IAAIC,WAAW,QAAQ,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzE,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACjC;EACA,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAI,CAACA,KAAK,EAAE,OAAO,MAAM,CAAC,CAAC;IAC3B,MAAMC,QAAQ,GAAGC,MAAM,CAACF,KAAK,CAAC;IAC9B,IAAIC,QAAQ,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACtC,IAAIA,QAAQ,IAAI,EAAE,EAAE,OAAO,SAAS,CAAC,CAAC;IACtC,IAAIA,QAAQ,IAAI,GAAG,EAAE,OAAO,SAAS,CAAC,CAAC;IACvC,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;;EAED;EACA,MAAME,YAAY,GAAIC,IAAI,IAAK;IAC7B,OAAOL,YAAY,CAACD,QAAQ,CAACM,IAAI,CAAC,CAAC;EACrC,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAElCV,OAAA,CAACF,WAAW;MAACW,SAAS,EAAC,WAAW;MAAAC,QAAA,eAEhCV,OAAA;QAAAU,QAAA,gBACEV,OAAA;UACEW,EAAE,EAAC,OAAO;UACVC,CAAC,EAAC,qCAAqC,CAAC;UAAA;UACxCC,IAAI,EAAEN,YAAY,CAAC,OAAO;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eACFjB,OAAA;UACEW,EAAE,EAAC,OAAO;UACVC,CAAC,EAAC,qCAAqC,CAAC;UAAA;UACxCC,IAAI,EAAEN,YAAY,CAAC,OAAO;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEV,CAAC;AAACC,EAAA,GArCIjB,QAAQ;AAuCd,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}