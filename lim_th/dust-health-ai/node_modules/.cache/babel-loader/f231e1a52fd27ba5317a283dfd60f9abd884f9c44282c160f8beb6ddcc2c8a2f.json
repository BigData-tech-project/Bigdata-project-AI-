{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D');\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  // 도시명과 미세먼지 농도를 추출\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n\n  // 농도에 따라 원의 색상을 다르게 설정하는 함수\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'gray'; // 데이터가 없을 때 회색\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 'green'; // 좋음\n    if (pmValue <= 80) return 'yellow'; // 보통\n    if (pmValue <= 150) return 'orange'; // 나쁨\n    return 'red'; // 매우 나쁨\n  };\n\n  // 농도에 따라 원의 크기를 조절하는 함수\n  const getRadiusByPM10 = value => {\n    if (!value || value === '-') return 10;\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 20; // 좋음\n    if (pmValue <= 80) return 30; // 보통\n    if (pmValue <= 150) return 40; // 나쁨\n    return 50; // 매우 나쁨\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dust-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodayDust Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dust-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [36.5, 128.0],\n        zoom: 7,\n        dragging: false,\n        scrollWheelZoom: false,\n        zoomControl: false,\n        className: \"map-container\" // 스타일을 CSS 클래스에 맡깁니다.\n        ,\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://carto.com/attributions\\\">CARTO</a>\",\n          maxZoom: 19\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 10\n        }, this), cities.map(([city, value]) => {\n          const coordinates = cityCoordinates[cityMapping[city]];\n          if (!coordinates) return null;\n          return /*#__PURE__*/_jsxDEV(CircleMarker, {\n            center: coordinates,\n            radius: getRadiusByPM10(value) // Apply dynamic radius here\n            ,\n            color: getColorByPM10(value),\n            fillOpacity: 0.7,\n            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n              permanent: true,\n              direction: \"center\",\n              className: \"custom-tooltip\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontWeight: 'bold',\n                  color: 'black',\n                  fontSize: '12px'\n                },\n                children: cityMapping[city]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Popup, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  textAlign: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: cityMapping[city]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 58\n                }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0(PM10): \", value, \"\\u338D/m\\xB3 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 45\n                }, this), \"\\uC0C1\\uD0DC:\", parseFloat(value) <= 30 ? '좋음' : parseFloat(value) <= 80 ? '보통' : parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)]\n          }, city, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815\\uC77C\\uC2DC: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/analyze\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"AI-button\",\n            children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/main\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"main-button\",\n            children: \"Main\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"K+Gs8WVuwoFb+4oEtPvW/SMHkbA=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","CircleMarker","Tooltip","Popup","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","loading","setLoading","fetchData","response","fetch","data","json","body","items","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","Object","entries","filter","key","getColorByPM10","value","pmValue","parseFloat","getRadiusByPM10","className","center","zoom","dragging","scrollWheelZoom","zoomControl","url","attribution","maxZoom","map","city","coordinates","radius","color","fillOpacity","permanent","direction","style","fontWeight","fontSize","textAlign","dataTime","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\n          'https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D'\n        );\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  // 도시명과 미세먼지 농도를 추출\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  // 농도에 따라 원의 색상을 다르게 설정하는 함수\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'gray'; // 데이터가 없을 때 회색\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 'green'; // 좋음\n    if (pmValue <= 80) return 'yellow'; // 보통\n    if (pmValue <= 150) return 'orange'; // 나쁨\n    return 'red'; // 매우 나쁨\n  };\n\n  // 농도에 따라 원의 크기를 조절하는 함수\n  const getRadiusByPM10 = (value) => {\n    if (!value || value === '-') return 10;\n    const pmValue = parseFloat(value);\n    if (pmValue <= 30) return 20; // 좋음\n    if (pmValue <= 80) return 30; // 보통\n    if (pmValue <= 150) return 40; // 나쁨\n    return 50; // 매우 나쁨\n  };\n\n  return (\n    <div className=\"dust-container\">\n      <header className=\"dust-header\">\n        <h1>TodayDust Page</h1>\n      </header>\n\n      <main className=\"dust-content\">\n        <p>오늘의 미세먼지 지도</p>\n\n        {/* Leaflet 지도 */}\n        <MapContainer\n          center={[36.5, 128.0]}\n          zoom={7}\n          dragging={false}\n          scrollWheelZoom={false}\n          zoomControl={false}\n          className=\"map-container\" // 스타일을 CSS 클래스에 맡깁니다.\n        >\n         <TileLayer\n  url=\"https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\"\n  attribution='&copy; <a href=\"https://carto.com/attributions\">CARTO</a>'\n  maxZoom={19}\n/>\n\n          {cities.map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            if (!coordinates) return null;\n\n            return (\n              <CircleMarker\n                key={city}\n                center={coordinates}\n                radius={getRadiusByPM10(value)} // Apply dynamic radius here\n                color={getColorByPM10(value)}\n                fillOpacity={0.7}\n              >\n                <Tooltip permanent direction=\"center\" className=\"custom-tooltip\">\n                  <span style={{ fontWeight: 'bold', color: 'black', fontSize: '12px' }}>\n                    {cityMapping[city]}\n                  </span>\n                </Tooltip>\n                <Popup>\n                  <div style={{ textAlign: 'center' }}>\n                    <strong>{cityMapping[city]}</strong> <br />\n                    미세먼지(PM10): {value}㎍/m³ <br />\n                    상태:\n                    {parseFloat(value) <= 30 ? '좋음' :\n                      parseFloat(value) <= 80 ? '보통' :\n                      parseFloat(value) <= 150 ? '나쁨' : '매우 나쁨'}\n                  </div>\n                </Popup>\n              </CircleMarker>\n            );\n          })}\n        </MapContainer>\n\n        <p>측정일시: {dustData.dataTime}</p>\n\n        <div className=\"button-container\">\n          <Link to=\"/analyze\">\n            <button className=\"AI-button\">AI 분석 페이지 이동</button>\n          </Link>\n          <Link to=\"/main\">\n            <button className=\"main-button\">Main</button>\n          </Link>\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}