{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{\n            region: firstRegion,\n            regionDetail: firstRegionDetail,\n            apiData: detailData\n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return '#4c50af';\n    if (pmValue <= 35) return '#4caf50';\n    if (pmValue <= 75) return '#fff559';\n    if (pmValue <= 150) return '#ff9800';\n    return '#f44336';\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 12\n    }, this);\n  }\n  if (!dustData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC2E4\\uC2DC\\uAC04 \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-data-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"api-data-list\",\n        children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"api-data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [data.region, \" - \", data.regionDetail, \" \\uC9C0\\uC5ED \\uC815\\uBCF4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCE21\\uC815 \\uC2DC\\uAC04: \", item.dataTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gauge-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: parseFloat(item.pm10Value),\n                  maxValue: 150,\n                  text: `${item.pm10Value} ㎍/m³`,\n                  styles: buildStyles({\n                    pathColor: getColorByPM10(item.pm10Value),\n                    textColor: '#333'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"PM10\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: parseFloat(item.pm25Value),\n                  maxValue: 100,\n                  text: `${item.pm25Value} ㎍/m³`,\n                  styles: buildStyles({\n                    pathColor: getColorByPM10(item.pm25Value),\n                    textColor: '#333'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"PM2.5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: parseFloat(item.coValue),\n                  maxValue: 10,\n                  text: `${item.coValue} ppm`,\n                  styles: buildStyles({\n                    pathColor: '#ff9800',\n                    textColor: '#333'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"CO2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gauge\",\n                children: [/*#__PURE__*/_jsxDEV(CircularProgressbar, {\n                  value: parseFloat(item.o3Value),\n                  maxValue: 0.2,\n                  text: `${item.o3Value} ppb`,\n                  styles: buildStyles({\n                    pathColor: '#4caf50',\n                    textColor: '#333'\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"O3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this))]\n        }, data.region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","L","axios","CircularProgressbar","buildStyles","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","API_KEY","fetchDustData","response","fetch","data","json","body","items","console","fetchDbData","get","fetchDetailData","region","regionDetail","allItems","matchingItems","filter","item","cityName","sort","a","b","Date","dataTime","length","fetchAllData","dustResult","dbResult","firstRegion","firstRegionDetail","region_detail","detailData","message","getColorByPM10","value","pmValue","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","pm10Value","maxValue","text","styles","pathColor","textColor","pm25Value","coValue","o3Value","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_KEY = 'zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D';\n\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n      const allItems = response.data.response.body.items;\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      matchingItems.sort((a, b) => new Date(b.dataTime) - new Date(a.dataTime));\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{ \n            region: firstRegion, \n            regionDetail: firstRegionDetail,\n            apiData: detailData \n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return '#4c50af';\n    if (pmValue <= 35) return '#4caf50';\n    if (pmValue <= 75) return '#fff559';\n    if (pmValue <= 150) return '#ff9800';\n    return '#f44336';\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  if (!dustData) {\n    return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n  }\n\n  return (\n    <div className=\"dust-container\">\n      <h2>실시간 대기질 정보</h2>\n      <div className=\"api-data-section\">\n        <ul className=\"api-data-list\">\n          {apiData.map((data) => (\n            <li key={data.region} className=\"api-data-item\">\n              <h4>{data.region} - {data.regionDetail} 지역 정보</h4>\n              {data.apiData.length === 0 ? (\n                <p>해당 지역의 데이터가 없습니다.</p>\n              ) : (\n                data.apiData.map((item, index) => (\n                  <div key={index} className=\"measurement-info\">\n                    <p>측정 시간: {item.dataTime}</p>\n                    <div className=\"gauge-container\">\n                      <div className=\"gauge\">\n                        <CircularProgressbar\n                          value={parseFloat(item.pm10Value)}\n                          maxValue={150}\n                          text={`${item.pm10Value} ㎍/m³`}\n                          styles={buildStyles({\n                            pathColor: getColorByPM10(item.pm10Value),\n                            textColor: '#333',\n                          })}\n                        />\n                        <p>PM10</p>\n                      </div>\n                      <div className=\"gauge\">\n                        <CircularProgressbar\n                          value={parseFloat(item.pm25Value)}\n                          maxValue={100}\n                          text={`${item.pm25Value} ㎍/m³`}\n                          styles={buildStyles({\n                            pathColor: getColorByPM10(item.pm25Value),\n                            textColor: '#333',\n                          })}\n                        />\n                        <p>PM2.5</p>\n                      </div>\n                      <div className=\"gauge\">\n                        <CircularProgressbar\n                          value={parseFloat(item.coValue)}\n                          maxValue={10}\n                          text={`${item.coValue} ppm`}\n                          styles={buildStyles({\n                            pathColor: '#ff9800',\n                            textColor: '#333',\n                          })}\n                        />\n                        <p>CO2</p>\n                      </div>\n                      <div className=\"gauge\">\n                        <CircularProgressbar\n                          value={parseFloat(item.o3Value)}\n                          maxValue={0.2}\n                          text={`${item.o3Value} ppb`}\n                          styles={buildStyles({\n                            pathColor: '#4caf50',\n                            textColor: '#333',\n                          })}\n                        />\n                        <p>O3</p>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}