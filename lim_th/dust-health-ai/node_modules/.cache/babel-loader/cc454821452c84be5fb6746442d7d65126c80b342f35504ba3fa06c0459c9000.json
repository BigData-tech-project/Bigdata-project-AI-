{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet'; // Leaflet 라이브러리\nimport 'leaflet/dist/leaflet.css'; // 스타일시트 import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mapData, setMapData] = useState([]);\n  useEffect(() => {\n    const fetchDustData = async () => {\n      try {\n        const response = await fetch('https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D');\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n\n        // 지도에 표시할 지역 데이터 설정 (좌표와 미세먼지 농도)\n        const mapRegions = Object.entries(data.response.body.items[0]).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode').map(([city, value]) => ({\n          name: cityMapping[city] || city,\n          pm10: value,\n          coords: getCityCoordinates(city) // 각 지역의 좌표를 구하는 함수\n        }));\n        setMapData(mapRegions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n    fetchDustData();\n  }, []);\n  const getCityCoordinates = city => {\n    const coordinates = {\n      서울: [37.5665, 126.9780],\n      부산: [35.1796, 129.0756]\n      // 추가적인 도시 좌표를 여기에 넣습니다.\n    };\n    return coordinates[city] || [37.5665, 126.9780]; // 기본값은 서울\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"dust-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TodayDust \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dust-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [37.5665, 126.9780],\n        zoom: 6,\n        style: {\n          width: '100%',\n          height: '500px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), mapData.map((region, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: region.coords,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: region.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), \"\\uBBF8\\uC138\\uBA3C\\uC9C0 \\uB18D\\uB3C4(PM10): \", region.pm10, \" \\u03BCg/m\\xB3\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815\\uC77C\\uC2DC: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC0AC\\uC6A9\\uC790 \\uB9DE\\uCDA4 \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/analyze\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"AI-button\",\n          children: \"AI \\uBD84\\uC11D \\uD398\\uC774\\uC9C0 \\uC774\\uB3D9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/main\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"main-button\",\n        children: \"Main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"zrA1efwS5/iYH25fVfEFhFnCGQ8=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","cityMapping","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","loading","setLoading","mapData","setMapData","fetchDustData","response","fetch","data","json","body","items","mapRegions","Object","entries","filter","key","map","city","value","name","pm10","coords","getCityCoordinates","error","console","coordinates","서울","부산","children","fileName","_jsxFileName","lineNumber","columnNumber","className","center","zoom","style","width","height","url","attribution","region","index","position","dataTime","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport L from 'leaflet'; // Leaflet 라이브러리\nimport 'leaflet/dist/leaflet.css'; // 스타일시트 import\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [mapData, setMapData] = useState([]);\n\n  useEffect(() => {\n    const fetchDustData = async () => {\n      try {\n        const response = await fetch(\n          'https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D'\n        );\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n        setLoading(false);\n\n        // 지도에 표시할 지역 데이터 설정 (좌표와 미세먼지 농도)\n        const mapRegions = Object.entries(data.response.body.items[0]).filter(\n          ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n        ).map(([city, value]) => ({\n          name: cityMapping[city] || city,\n          pm10: value,\n          coords: getCityCoordinates(city), // 각 지역의 좌표를 구하는 함수\n        }));\n\n        setMapData(mapRegions);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      }\n    };\n\n    fetchDustData();\n  }, []);\n\n  const getCityCoordinates = (city) => {\n    const coordinates = {\n      서울: [37.5665, 126.9780],\n      부산: [35.1796, 129.0756],\n      // 추가적인 도시 좌표를 여기에 넣습니다.\n    };\n    return coordinates[city] || [37.5665, 126.9780]; // 기본값은 서울\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"dust-container\">\n      <header className=\"dust-header\">\n        <h1>TodayDust 페이지</h1>\n      </header>\n      <main className=\"dust-content\">\n        <p>오늘의 미세먼지</p>\n\n        {/* 지도 표시 */}\n        <MapContainer center={[37.5665, 126.9780]} zoom={6} style={{ width: '100%', height: '500px' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution=\"&copy; <a href='https://www.openstreetmap.org/copyright'>OpenStreetMap</a> contributors\"\n          />\n          {mapData.map((region, index) => (\n            <Marker key={index} position={region.coords}>\n              <Popup>\n                <strong>{region.name}</strong>\n                <br />\n                미세먼지 농도(PM10): {region.pm10} μg/m³\n              </Popup>\n            </Marker>\n          ))}\n        </MapContainer>\n\n        <p>측정일시: {dustData.dataTime}</p>\n\n        <p>사용자 맞춤 분석</p>\n        <Link to=\"/analyze\">\n          <button className=\"AI-button\">AI 분석 페이지 이동</button>\n        </Link>\n      </main>\n      <Link to=\"/main\">\n        <button className=\"main-button\">Main</button>\n      </Link>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}