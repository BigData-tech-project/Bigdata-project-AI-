{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDustData = async () => {\n      try {\n        const response = await fetch('https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D');\n        if (!response.ok) {\n          throw new Error('데이터 로드 실패');\n        }\n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchDustData();\n  }, []);\n\n  // 미세먼지 등급 결정 함수\n  const getDustLevel = value => {\n    const pm10 = parseFloat(value);\n    if (pm10 <= 30) return {\n      status: '좋음',\n      color: 'green'\n    };\n    if (pm10 <= 80) return {\n      status: '보통',\n      color: 'yellow'\n    };\n    if (pm10 <= 150) return {\n      status: '나쁨',\n      color: 'orange'\n    };\n    return {\n      status: '매우 나쁨',\n      color: 'red'\n    };\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 21\n  }, this);\n  if (!dustData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No data available\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [36.5, 128.0],\n      zoom: 7,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), Object.entries(dustData).filter(([key]) => cityMapping[key]).map(([city, value]) => {\n        const coordinates = cityCoordinates[cityMapping[city]];\n        const dustLevel = getDustLevel(value);\n        return coordinates ? /*#__PURE__*/_jsxDEV(CircleMarker, {\n          center: coordinates,\n          radius: 20,\n          color: dustLevel.color,\n          fillColor: dustLevel.color,\n          fillOpacity: 0.7,\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            permanent: true,\n            children: cityMapping[city]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: cityMapping[city]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uBBF8\\uC138\\uBA3C\\uC9C0: \", value, \"\\u338D/m\\xB3\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"\\uC0C1\\uD0DC: \", dustLevel.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, city, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this) : null;\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dust-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCE21\\uC815 \\uC2DC\\uAC04: \", dustData.dataTime]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/analyze\",\n        children: \"AI \\uBD84\\uC11D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/main\",\n        children: \"\\uBA54\\uC778 \\uD398\\uC774\\uC9C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"udteIhr80hXyWj533rn/lYXcFlY=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","CircleMarker","Tooltip","Popup","cityMapping","cityCoordinates","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","isLoading","setIsLoading","error","setError","fetchDustData","response","fetch","ok","Error","data","json","body","items","err","message","getDustLevel","value","pm10","parseFloat","status","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","center","zoom","style","height","width","url","attribution","Object","entries","filter","key","map","city","coordinates","dustLevel","radius","fillColor","fillOpacity","permanent","dataTime","to","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, CircleMarker, Tooltip, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDustData = async () => {\n      try {\n        const response = await fetch(\n          'https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=zhvs5TlKznNkfpG91l4BPgIcZtbsxovufWhyA4%2Bw2KcaA1dp6RsGVOYHyD91i%2FXzDfAqOFIdScVjvbElsw%2BBCQ%3D%3D'\n        );\n        \n        if (!response.ok) {\n          throw new Error('데이터 로드 실패');\n        }\n        \n        const data = await response.json();\n        setDustData(data.response.body.items[0]);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchDustData();\n  }, []);\n\n  // 미세먼지 등급 결정 함수\n  const getDustLevel = (value) => {\n    const pm10 = parseFloat(value);\n    if (pm10 <= 30) return { status: '좋음', color: 'green' };\n    if (pm10 <= 80) return { status: '보통', color: 'yellow' };\n    if (pm10 <= 150) return { status: '나쁨', color: 'orange' };\n    return { status: '매우 나쁨', color: 'red' };\n  };\n\n  // 로딩 및 에러 상태 처리\n  if (isLoading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n  if (!dustData) return <div>No data available</div>;\n\n  return (\n    <div className=\"dust-container\">\n      <h1>오늘의 미세먼지</h1>\n      <MapContainer \n        center={[36.5, 128.0]} \n        zoom={7} \n        style={{ height: '500px', width: '100%' }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        {Object.entries(dustData)\n          .filter(([key]) => cityMapping[key])\n          .map(([city, value]) => {\n            const coordinates = cityCoordinates[cityMapping[city]];\n            const dustLevel = getDustLevel(value);\n            \n            return coordinates ? (\n              <CircleMarker\n                key={city}\n                center={coordinates}\n                radius={20}\n                color={dustLevel.color}\n                fillColor={dustLevel.color}\n                fillOpacity={0.7}\n              >\n                <Tooltip permanent>\n                  {cityMapping[city]}\n                </Tooltip>\n                <Popup>\n                  <div>\n                    <strong>{cityMapping[city]}</strong>\n                    <p>미세먼지: {value}㎍/m³</p>\n                    <p>상태: {dustLevel.status}</p>\n                  </div>\n                </Popup>\n              </CircleMarker>\n            ) : null;\n          })}\n      </MapContainer>\n      \n      <div className=\"dust-info\">\n        <p>측정 시간: {dustData.dataTime}</p>\n      </div>\n\n      <div className=\"navigation-buttons\">\n        <Link to=\"/analyze\">AI 분석</Link>\n        <Link to=\"/main\">메인 페이지</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default TodayDust;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}