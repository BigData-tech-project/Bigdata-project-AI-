{"ast":null,"code":"var _jsxFileName = \"C:\\\\Bigdata-project-AI--main\\\\lim_th\\\\dust-health-ai\\\\src\\\\pages\\\\TodayDust.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css'; // 기본 스타일 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodayDust = () => {\n  _s();\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_KEY = 'YOUR_API_KEY'; // 실제 API 키로 변경\n\n  // 전국 미세먼지 데이터 조회\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`);\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 조회\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  // 시도별 상세 데이터 조회 - cityName 기준으로 필터링\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(`https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`);\n      const allItems = response.data.response.body.items;\n\n      // 1. cityName이 region_detail과 일치하는 데이터만 먼저 필터링\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n\n      // 2. dataTime을 기준으로 정렬 (최신 순)\n      matchingItems.sort((a, b) => {\n        const dateA = new Date(a.dataTime);\n        const dateB = new Date(b.dataTime);\n        return dateB - dateA;\n      });\n\n      // 3. 가장 최신 데이터만 반환\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        // 1. 기본 미세먼지 데이터 조회\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n\n        // 2. DB 데이터 조회\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        // 3. DB 데이터의 region과 region_detail을 기반으로 상세 데이터 조회\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{\n            region: firstRegion,\n            regionDetail: firstRegionDetail,\n            apiData: detailData\n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllData();\n  }, []);\n\n  // PM10 수치에 따라 색상을 반환하는 함수\n  const getColorByPM10 = value => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n\n  // PM10 수치에 따라 사각형 마커의 스타일과 지역명을 반환하는 함수\n  const getMarkerStyleByPM10 = value => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)'\n    };\n    const pmValue = parseFloat(value);\n\n    // PM10 수치에 따라 크기를 단계별로 설정\n    let size = 30; // 기본값\n    if (pmValue > 15 && pmValue <= 35) size = 35;else if (pmValue > 35 && pmValue <= 75) size = 40;else if (pmValue > 75 && pmValue <= 150) size = 45;else if (pmValue > 150) size = 50;\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px',\n      // 사각형 모양\n      border: '2px solid #333',\n      fontSize: '14px',\n      // 한글 지역명에 맞게 폰트 크기 조정\n      fontWeight: 'bold'\n    };\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 12\n    }, this);\n  }\n  if (!dustData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC62C \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4. \\uB2E4\\uC2DC \\uC2DC\\uB3C4\\uD574\\uC8FC\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 12\n    }, this);\n  }\n  const cities = Object.entries(dustData).filter(([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dust-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC2E4\\uC2DC\\uAC04 \\uB300\\uAE30\\uC9C8 \\uC815\\uBCF4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"api-data-section\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"api-data-list\",\n        children: apiData.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"api-data-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [data.region, \" - \", data.regionDetail, \" \\uC9C0\\uC5ED \\uC815\\uBCF4\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this), data.apiData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"\\uD574\\uB2F9 \\uC9C0\\uC5ED\\uC758 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this) : data.apiData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"measurement-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uCE21\\uC815 \\uC2DC\\uAC04: \", item.dataTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gauge-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  marginBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n                  value: item.pm10Value / 100 * 100,\n                  styles: buildStyles({\n                    pathColor: '#FF6384',\n                    textColor: '#FF6384',\n                    trailColor: '#eee'\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '12px',\n                      color: '#FF6384'\n                    },\n                    children: \"PM10\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [item.pm10Value, \"\\u338D/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  marginBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n                  value: item.pm25Value / 100 * 100,\n                  styles: buildStyles({\n                    pathColor: '#36A2EB',\n                    textColor: '#36A2EB',\n                    trailColor: '#eee'\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '12px',\n                      color: '#36A2EB'\n                    },\n                    children: \"PM2.5\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [item.pm25Value, \"\\u338D/m\\xB3\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  marginBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n                  value: item.coValue / 1000 * 100,\n                  styles: buildStyles({\n                    pathColor: '#FFCE56',\n                    textColor: '#FFCE56',\n                    trailColor: '#eee'\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '12px',\n                      color: '#FFCE56'\n                    },\n                    children: \"CO2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.coValue\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  width: '150px',\n                  height: '150px',\n                  marginBottom: '20px'\n                },\n                children: /*#__PURE__*/_jsxDEV(CircularProgressbarWithChildren, {\n                  value: (item.o3Value || 0) * 100,\n                  styles: buildStyles({\n                    pathColor: '#4BC0C0',\n                    textColor: '#4BC0C0',\n                    trailColor: '#eee'\n                  }),\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      fontSize: '12px',\n                      color: '#4BC0C0'\n                    },\n                    children: \"O3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: item.o3Value || '데이터 없음'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 236,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this))]\n        }, data.region, true, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"dust-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC624\\uB298\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC9C0\\uB3C4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: [36.5, 127.7],\n        zoom: 7,\n        scrollWheelZoom: false,\n        style: {\n          width: '100%',\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), cityCoordinates.map((city, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: city.coordinates,\n          icon: L.divIcon({\n            className: 'leaflet-div-icon',\n            html: `\n                  <div class=\"marker\" style=\"${getMarkerStyleByPM10(city.pm10)}\">${city.city}</div>\n                `\n          }),\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [city.city, \"\\uC758 \\uBBF8\\uC138\\uBA3C\\uC9C0 \\uC218\\uCE58: \", city.pm10]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(TodayDust, \"ISYcmxiQUGjndtZbj6F68rp8xBc=\");\n_c = TodayDust;\nexport default TodayDust;\nvar _c;\n$RefreshReg$(_c, \"TodayDust\");","map":{"version":3,"names":["React","useEffect","useState","Link","MapContainer","TileLayer","Marker","Popup","L","axios","cityMapping","cityCoordinates","CircularProgressbarWithChildren","buildStyles","jsxDEV","_jsxDEV","TodayDust","_s","dustData","setDustData","dbData","setDbData","apiData","setApiData","loading","setLoading","error","setError","API_KEY","fetchDustData","response","fetch","data","json","body","items","console","fetchDbData","get","fetchDetailData","region","regionDetail","allItems","matchingItems","filter","item","cityName","sort","a","b","dateA","Date","dataTime","dateB","length","fetchAllData","dustResult","dbResult","firstRegion","firstRegionDetail","region_detail","detailData","message","getColorByPM10","value","pmValue","parseFloat","getMarkerStyleByPM10","width","height","backgroundColor","size","borderRadius","border","fontSize","fontWeight","className","children","fileName","_jsxFileName","lineNumber","columnNumber","cities","Object","entries","key","map","index","style","marginBottom","pm10Value","styles","pathColor","textColor","trailColor","color","pm25Value","coValue","o3Value","center","zoom","scrollWheelZoom","url","attribution","city","position","coordinates","icon","divIcon","html","pm10","_c","$RefreshReg$"],"sources":["C:/Bigdata-project-AI--main/lim_th/dust-health-ai/src/pages/TodayDust.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport '../css/todaydust.css';\nimport cityMapping from '../region_mapping/cityMapping.js';\nimport cityCoordinates from '../region_mapping/cityPosition.js';\nimport { CircularProgressbarWithChildren, buildStyles } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css'; // 기본 스타일 임포트\n\nconst TodayDust = () => {\n  const [dustData, setDustData] = useState(null);\n  const [dbData, setDbData] = useState([]);\n  const [apiData, setApiData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_KEY = 'YOUR_API_KEY'; // 실제 API 키로 변경\n\n  // 전국 미세먼지 데이터 조회\n  const fetchDustData = async () => {\n    try {\n      const response = await fetch(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureLIst?itemCode=PM10&dataGubun=HOUR&pageNo=1&numOfRows=1&returnType=json&serviceKey=${API_KEY}`\n      );\n      const data = await response.json();\n      return data.response.body.items[0];\n    } catch (error) {\n      console.error('Error fetching dust data:', error);\n      throw error;\n    }\n  };\n\n  // DB 데이터 조회\n  const fetchDbData = async () => {\n    try {\n      const response = await axios.get('http://127.0.0.1:8000/api/products/');\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching DB data:', error);\n      throw error;\n    }\n  };\n\n  // 시도별 상세 데이터 조회 - cityName 기준으로 필터링\n  const fetchDetailData = async (region, regionDetail) => {\n    try {\n      const response = await axios.get(\n        `https://apis.data.go.kr/B552584/ArpltnStatsSvc/getCtprvnMesureSidoLIst?sidoName=${region}&searchCondition=DAILY&pageNo=1&numOfRows=100&returnType=json&serviceKey=${API_KEY}`\n      );\n      \n      const allItems = response.data.response.body.items;\n      \n      // 1. cityName이 region_detail과 일치하는 데이터만 먼저 필터링\n      const matchingItems = allItems.filter(item => item.cityName === regionDetail);\n      \n      // 2. dataTime을 기준으로 정렬 (최신 순)\n      matchingItems.sort((a, b) => {\n        const dateA = new Date(a.dataTime);\n        const dateB = new Date(b.dataTime);\n        return dateB - dateA;\n      });\n      \n      // 3. 가장 최신 데이터만 반환\n      return matchingItems.length > 0 ? [matchingItems[0]] : [];\n      \n    } catch (error) {\n      console.error(`Error fetching detail data for ${region}:`, error);\n      return [];\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      try {\n        setLoading(true);\n        // 1. 기본 미세먼지 데이터 조회\n        const dustResult = await fetchDustData();\n        setDustData(dustResult);\n\n        // 2. DB 데이터 조회\n        const dbResult = await fetchDbData();\n        setDbData(dbResult);\n\n        // 3. DB 데이터의 region과 region_detail을 기반으로 상세 데이터 조회\n        if (dbResult.length > 0) {\n          const firstRegion = dbResult[0].region;\n          const firstRegionDetail = dbResult[0].region_detail;\n          \n          const detailData = await fetchDetailData(firstRegion, firstRegionDetail);\n          setApiData([{ \n            region: firstRegion, \n            regionDetail: firstRegionDetail,\n            apiData: detailData \n          }]);\n        }\n      } catch (error) {\n        setError(error.message);\n        console.error('fetchAllData 에러:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllData();\n  }, []);\n\n  // PM10 수치에 따라 색상을 반환하는 함수\n  const getColorByPM10 = (value) => {\n    if (!value || value === '-') return 'rgba(128, 128, 128, 0.7)';\n    const pmValue = parseFloat(value);\n    if (pmValue <= 15) return 'rgba(76, 80, 175, 0.7)';\n    if (pmValue <= 35) return 'rgba(76, 175, 80, 0.7)';\n    if (pmValue <= 75) return 'rgba(255, 245, 89, 0.7)';\n    if (pmValue <= 150) return 'rgba(255, 152, 0, 0.7)';\n    return 'rgba(244, 67, 54, 0.7)';\n  };\n\n  // PM10 수치에 따라 사각형 마커의 스타일과 지역명을 반환하는 함수\n  const getMarkerStyleByPM10 = (value) => {\n    if (!value || value === '-') return {\n      width: '40px',\n      height: '40px',\n      backgroundColor: 'rgba(128, 128, 128, 0.7)',\n    };\n\n    const pmValue = parseFloat(value);\n  \n    // PM10 수치에 따라 크기를 단계별로 설정\n    let size = 30; // 기본값\n    if (pmValue > 15 && pmValue <= 35) size = 35;\n    else if (pmValue > 35 && pmValue <= 75) size = 40;\n    else if (pmValue > 75 && pmValue <= 150) size = 45;\n    else if (pmValue > 150) size = 50;\n\n    return {\n      width: `${size}px`,\n      height: `${size}px`,\n      backgroundColor: getColorByPM10(value),\n      borderRadius: '5px', // 사각형 모양\n      border: '2px solid #333',\n      fontSize: '14px', // 한글 지역명에 맞게 폰트 크기 조정\n      fontWeight: 'bold',\n    };\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  if (error) {\n    return <div className=\"error\">Error: {error}</div>;\n  }\n\n  if (!dustData) {\n    return <div>데이터를 불러올 수 없습니다. 다시 시도해주세요.</div>;\n  }\n\n  const cities = Object.entries(dustData).filter(\n    ([key]) => key !== 'dataTime' && key !== 'dataGubun' && key !== 'itemCode'\n  );\n\n  return (\n    <div className=\"dust-container\">\n      <h2>실시간 대기질 정보</h2>\n      <div className=\"api-data-section\">\n        <ul className=\"api-data-list\">\n          {apiData.map((data) => (\n            <li key={data.region} className=\"api-data-item\">\n              <h4>{data.region} - {data.regionDetail} 지역 정보</h4>\n              {data.apiData.length === 0 ? (\n                <p>해당 지역의 데이터가 없습니다.</p>\n              ) : (\n                data.apiData.map((item, index) => (\n                  <div key={index} className=\"measurement-info\">\n                    <p>측정 시간: {item.dataTime}</p>\n                    <div className=\"gauge-container\">\n                      {/* PM10 Gauge */}\n                      <div style={{ width: '150px', height: '150px', marginBottom: '20px' }}>\n                        <CircularProgressbarWithChildren\n                          value={(item.pm10Value / 100) * 100}\n                          styles={buildStyles({\n                            pathColor: '#FF6384',\n                            textColor: '#FF6384',\n                            trailColor: '#eee',\n                          })}\n                        >\n                          <div style={{ fontSize: '12px', color: '#FF6384' }}>PM10</div>\n                          <div>{item.pm10Value}㎍/m³</div>\n                        </CircularProgressbarWithChildren>\n                      </div>\n\n                      {/* PM2.5 Gauge */}\n                      <div style={{ width: '150px', height: '150px', marginBottom: '20px' }}>\n                        <CircularProgressbarWithChildren\n                          value={(item.pm25Value / 100) * 100}\n                          styles={buildStyles({\n                            pathColor: '#36A2EB',\n                            textColor: '#36A2EB',\n                            trailColor: '#eee',\n                          })}\n                        >\n                          <div style={{ fontSize: '12px', color: '#36A2EB' }}>PM2.5</div>\n                          <div>{item.pm25Value}㎍/m³</div>\n                        </CircularProgressbarWithChildren>\n                      </div>\n\n                      {/* CO2 Gauge */}\n                      <div style={{ width: '150px', height: '150px', marginBottom: '20px' }}>\n                        <CircularProgressbarWithChildren\n                          value={(item.coValue / 1000) * 100}\n                          styles={buildStyles({\n                            pathColor: '#FFCE56',\n                            textColor: '#FFCE56',\n                            trailColor: '#eee',\n                          })}\n                        >\n                          <div style={{ fontSize: '12px', color: '#FFCE56' }}>CO2</div>\n                          <div>{item.coValue}</div>\n                        </CircularProgressbarWithChildren>\n                      </div>\n\n                      {/* O3 Gauge */}\n                      <div style={{ width: '150px', height: '150px', marginBottom: '20px' }}>\n                        <CircularProgressbarWithChildren\n                          value={(item.o3Value || 0) * 100}\n                          styles={buildStyles({\n                            pathColor: '#4BC0C0',\n                            textColor: '#4BC0C0',\n                            trailColor: '#eee',\n                          })}\n                        >\n                          <div style={{ fontSize: '12px', color: '#4BC0C0' }}>O3</div>\n                          <div>{item.o3Value || '데이터 없음'}</div>\n                        </CircularProgressbarWithChildren>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <main className=\"dust-content\">\n        <p>오늘의 미세먼지 지도</p>\n        <MapContainer\n          center={[36.5, 127.7]}\n          zoom={7}\n          scrollWheelZoom={false}\n          style={{ width: '100%', height: '400px' }}\n        >\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n          {cityCoordinates.map((city, index) => (\n            <Marker\n              key={index}\n              position={city.coordinates}\n              icon={L.divIcon({\n                className: 'leaflet-div-icon',\n                html: `\n                  <div class=\"marker\" style=\"${getMarkerStyleByPM10(city.pm10)}\">${city.city}</div>\n                `,\n              })}\n            >\n              <Popup>\n                <span>{city.city}의 미세먼지 수치: {city.pm10}</span>\n              </Popup>\n            </Marker>\n          ))}\n        </MapContainer>\n      </main>\n    </div>\n  );\n};\n\nexport default TodayDust;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}